<?php
/**
 * ShippingMethodJsonApiAllOfRelationships
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * The version of the OpenAPI document: 6.5.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\ShopwareAdminApiClient\Model;

use \ArrayAccess;
use \OpenAPI\ShopwareAdminApiClient\ObjectSerializer;

/**
 * ShippingMethodJsonApiAllOfRelationships Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ShippingMethodJsonApiAllOfRelationships implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ShippingMethodJsonApi_allOf_relationships';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'delivery_time' => '\OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsDeliveryTime',
        'availability_rule' => '\OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsAvailabilityRule',
        'prices' => '\OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsPrices',
        'media' => '\OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsMedia',
        'tags' => '\OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsTags',
        'order_deliveries' => '\OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsOrderDeliveries',
        'sales_channels' => '\OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsSalesChannels',
        'sales_channel_default_assignments' => '\OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsSalesChannelDefaultAssignments',
        'tax' => '\OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsTax',
        'app_shipping_method' => '\OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsAppShippingMethod'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'delivery_time' => null,
        'availability_rule' => null,
        'prices' => null,
        'media' => null,
        'tags' => null,
        'order_deliveries' => null,
        'sales_channels' => null,
        'sales_channel_default_assignments' => null,
        'tax' => null,
        'app_shipping_method' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'delivery_time' => 'deliveryTime',
        'availability_rule' => 'availabilityRule',
        'prices' => 'prices',
        'media' => 'media',
        'tags' => 'tags',
        'order_deliveries' => 'orderDeliveries',
        'sales_channels' => 'salesChannels',
        'sales_channel_default_assignments' => 'salesChannelDefaultAssignments',
        'tax' => 'tax',
        'app_shipping_method' => 'appShippingMethod'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'delivery_time' => 'setDeliveryTime',
        'availability_rule' => 'setAvailabilityRule',
        'prices' => 'setPrices',
        'media' => 'setMedia',
        'tags' => 'setTags',
        'order_deliveries' => 'setOrderDeliveries',
        'sales_channels' => 'setSalesChannels',
        'sales_channel_default_assignments' => 'setSalesChannelDefaultAssignments',
        'tax' => 'setTax',
        'app_shipping_method' => 'setAppShippingMethod'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'delivery_time' => 'getDeliveryTime',
        'availability_rule' => 'getAvailabilityRule',
        'prices' => 'getPrices',
        'media' => 'getMedia',
        'tags' => 'getTags',
        'order_deliveries' => 'getOrderDeliveries',
        'sales_channels' => 'getSalesChannels',
        'sales_channel_default_assignments' => 'getSalesChannelDefaultAssignments',
        'tax' => 'getTax',
        'app_shipping_method' => 'getAppShippingMethod'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['delivery_time'] = $data['delivery_time'] ?? null;
        $this->container['availability_rule'] = $data['availability_rule'] ?? null;
        $this->container['prices'] = $data['prices'] ?? null;
        $this->container['media'] = $data['media'] ?? null;
        $this->container['tags'] = $data['tags'] ?? null;
        $this->container['order_deliveries'] = $data['order_deliveries'] ?? null;
        $this->container['sales_channels'] = $data['sales_channels'] ?? null;
        $this->container['sales_channel_default_assignments'] = $data['sales_channel_default_assignments'] ?? null;
        $this->container['tax'] = $data['tax'] ?? null;
        $this->container['app_shipping_method'] = $data['app_shipping_method'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets delivery_time
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsDeliveryTime|null
     */
    public function getDeliveryTime()
    {
        return $this->container['delivery_time'];
    }

    /**
     * Sets delivery_time
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsDeliveryTime|null $delivery_time delivery_time
     *
     * @return self
     */
    public function setDeliveryTime($delivery_time)
    {
        $this->container['delivery_time'] = $delivery_time;

        return $this;
    }

    /**
     * Gets availability_rule
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsAvailabilityRule|null
     */
    public function getAvailabilityRule()
    {
        return $this->container['availability_rule'];
    }

    /**
     * Sets availability_rule
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsAvailabilityRule|null $availability_rule availability_rule
     *
     * @return self
     */
    public function setAvailabilityRule($availability_rule)
    {
        $this->container['availability_rule'] = $availability_rule;

        return $this;
    }

    /**
     * Gets prices
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsPrices|null
     */
    public function getPrices()
    {
        return $this->container['prices'];
    }

    /**
     * Sets prices
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsPrices|null $prices prices
     *
     * @return self
     */
    public function setPrices($prices)
    {
        $this->container['prices'] = $prices;

        return $this;
    }

    /**
     * Gets media
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsMedia|null
     */
    public function getMedia()
    {
        return $this->container['media'];
    }

    /**
     * Sets media
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsMedia|null $media media
     *
     * @return self
     */
    public function setMedia($media)
    {
        $this->container['media'] = $media;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsTags|null
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsTags|null $tags tags
     *
     * @return self
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets order_deliveries
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsOrderDeliveries|null
     */
    public function getOrderDeliveries()
    {
        return $this->container['order_deliveries'];
    }

    /**
     * Sets order_deliveries
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsOrderDeliveries|null $order_deliveries order_deliveries
     *
     * @return self
     */
    public function setOrderDeliveries($order_deliveries)
    {
        $this->container['order_deliveries'] = $order_deliveries;

        return $this;
    }

    /**
     * Gets sales_channels
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsSalesChannels|null
     */
    public function getSalesChannels()
    {
        return $this->container['sales_channels'];
    }

    /**
     * Sets sales_channels
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsSalesChannels|null $sales_channels sales_channels
     *
     * @return self
     */
    public function setSalesChannels($sales_channels)
    {
        $this->container['sales_channels'] = $sales_channels;

        return $this;
    }

    /**
     * Gets sales_channel_default_assignments
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsSalesChannelDefaultAssignments|null
     */
    public function getSalesChannelDefaultAssignments()
    {
        return $this->container['sales_channel_default_assignments'];
    }

    /**
     * Sets sales_channel_default_assignments
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsSalesChannelDefaultAssignments|null $sales_channel_default_assignments sales_channel_default_assignments
     *
     * @return self
     */
    public function setSalesChannelDefaultAssignments($sales_channel_default_assignments)
    {
        $this->container['sales_channel_default_assignments'] = $sales_channel_default_assignments;

        return $this;
    }

    /**
     * Gets tax
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsTax|null
     */
    public function getTax()
    {
        return $this->container['tax'];
    }

    /**
     * Sets tax
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsTax|null $tax tax
     *
     * @return self
     */
    public function setTax($tax)
    {
        $this->container['tax'] = $tax;

        return $this;
    }

    /**
     * Gets app_shipping_method
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsAppShippingMethod|null
     */
    public function getAppShippingMethod()
    {
        return $this->container['app_shipping_method'];
    }

    /**
     * Sets app_shipping_method
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ShippingMethodJsonApiAllOfRelationshipsAppShippingMethod|null $app_shipping_method app_shipping_method
     *
     * @return self
     */
    public function setAppShippingMethod($app_shipping_method)
    {
        $this->container['app_shipping_method'] = $app_shipping_method;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


