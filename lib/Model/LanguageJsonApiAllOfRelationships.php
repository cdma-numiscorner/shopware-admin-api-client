<?php
/**
 * LanguageJsonApiAllOfRelationships
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * The version of the OpenAPI document: 6.5.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\ShopwareAdminApiClient\Model;

use \ArrayAccess;
use \OpenAPI\ShopwareAdminApiClient\ObjectSerializer;

/**
 * LanguageJsonApiAllOfRelationships Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class LanguageJsonApiAllOfRelationships implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'LanguageJsonApi_allOf_relationships';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'parent' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsParent',
        'locale' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsLocale',
        'translation_code' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsTranslationCode',
        'children' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsChildren',
        'sales_channels' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsSalesChannels',
        'sales_channel_default_assignments' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsSalesChannelDefaultAssignments',
        'sales_channel_domains' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsSalesChannelDomains',
        'customers' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsCustomers',
        'newsletter_recipients' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsNewsletterRecipients',
        'orders' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsOrders',
        'product_search_keywords' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductSearchKeywords',
        'product_keyword_dictionaries' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductKeywordDictionaries',
        'product_reviews' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductReviews',
        'product_search_config' => '\OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductSearchConfig'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'parent' => null,
        'locale' => null,
        'translation_code' => null,
        'children' => null,
        'sales_channels' => null,
        'sales_channel_default_assignments' => null,
        'sales_channel_domains' => null,
        'customers' => null,
        'newsletter_recipients' => null,
        'orders' => null,
        'product_search_keywords' => null,
        'product_keyword_dictionaries' => null,
        'product_reviews' => null,
        'product_search_config' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'parent' => 'parent',
        'locale' => 'locale',
        'translation_code' => 'translationCode',
        'children' => 'children',
        'sales_channels' => 'salesChannels',
        'sales_channel_default_assignments' => 'salesChannelDefaultAssignments',
        'sales_channel_domains' => 'salesChannelDomains',
        'customers' => 'customers',
        'newsletter_recipients' => 'newsletterRecipients',
        'orders' => 'orders',
        'product_search_keywords' => 'productSearchKeywords',
        'product_keyword_dictionaries' => 'productKeywordDictionaries',
        'product_reviews' => 'productReviews',
        'product_search_config' => 'productSearchConfig'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'parent' => 'setParent',
        'locale' => 'setLocale',
        'translation_code' => 'setTranslationCode',
        'children' => 'setChildren',
        'sales_channels' => 'setSalesChannels',
        'sales_channel_default_assignments' => 'setSalesChannelDefaultAssignments',
        'sales_channel_domains' => 'setSalesChannelDomains',
        'customers' => 'setCustomers',
        'newsletter_recipients' => 'setNewsletterRecipients',
        'orders' => 'setOrders',
        'product_search_keywords' => 'setProductSearchKeywords',
        'product_keyword_dictionaries' => 'setProductKeywordDictionaries',
        'product_reviews' => 'setProductReviews',
        'product_search_config' => 'setProductSearchConfig'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'parent' => 'getParent',
        'locale' => 'getLocale',
        'translation_code' => 'getTranslationCode',
        'children' => 'getChildren',
        'sales_channels' => 'getSalesChannels',
        'sales_channel_default_assignments' => 'getSalesChannelDefaultAssignments',
        'sales_channel_domains' => 'getSalesChannelDomains',
        'customers' => 'getCustomers',
        'newsletter_recipients' => 'getNewsletterRecipients',
        'orders' => 'getOrders',
        'product_search_keywords' => 'getProductSearchKeywords',
        'product_keyword_dictionaries' => 'getProductKeywordDictionaries',
        'product_reviews' => 'getProductReviews',
        'product_search_config' => 'getProductSearchConfig'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['parent'] = $data['parent'] ?? null;
        $this->container['locale'] = $data['locale'] ?? null;
        $this->container['translation_code'] = $data['translation_code'] ?? null;
        $this->container['children'] = $data['children'] ?? null;
        $this->container['sales_channels'] = $data['sales_channels'] ?? null;
        $this->container['sales_channel_default_assignments'] = $data['sales_channel_default_assignments'] ?? null;
        $this->container['sales_channel_domains'] = $data['sales_channel_domains'] ?? null;
        $this->container['customers'] = $data['customers'] ?? null;
        $this->container['newsletter_recipients'] = $data['newsletter_recipients'] ?? null;
        $this->container['orders'] = $data['orders'] ?? null;
        $this->container['product_search_keywords'] = $data['product_search_keywords'] ?? null;
        $this->container['product_keyword_dictionaries'] = $data['product_keyword_dictionaries'] ?? null;
        $this->container['product_reviews'] = $data['product_reviews'] ?? null;
        $this->container['product_search_config'] = $data['product_search_config'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets parent
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsParent|null
     */
    public function getParent()
    {
        return $this->container['parent'];
    }

    /**
     * Sets parent
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsParent|null $parent parent
     *
     * @return self
     */
    public function setParent($parent)
    {
        $this->container['parent'] = $parent;

        return $this;
    }

    /**
     * Gets locale
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsLocale|null
     */
    public function getLocale()
    {
        return $this->container['locale'];
    }

    /**
     * Sets locale
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsLocale|null $locale locale
     *
     * @return self
     */
    public function setLocale($locale)
    {
        $this->container['locale'] = $locale;

        return $this;
    }

    /**
     * Gets translation_code
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsTranslationCode|null
     */
    public function getTranslationCode()
    {
        return $this->container['translation_code'];
    }

    /**
     * Sets translation_code
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsTranslationCode|null $translation_code translation_code
     *
     * @return self
     */
    public function setTranslationCode($translation_code)
    {
        $this->container['translation_code'] = $translation_code;

        return $this;
    }

    /**
     * Gets children
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsChildren|null
     */
    public function getChildren()
    {
        return $this->container['children'];
    }

    /**
     * Sets children
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsChildren|null $children children
     *
     * @return self
     */
    public function setChildren($children)
    {
        $this->container['children'] = $children;

        return $this;
    }

    /**
     * Gets sales_channels
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsSalesChannels|null
     */
    public function getSalesChannels()
    {
        return $this->container['sales_channels'];
    }

    /**
     * Sets sales_channels
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsSalesChannels|null $sales_channels sales_channels
     *
     * @return self
     */
    public function setSalesChannels($sales_channels)
    {
        $this->container['sales_channels'] = $sales_channels;

        return $this;
    }

    /**
     * Gets sales_channel_default_assignments
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsSalesChannelDefaultAssignments|null
     */
    public function getSalesChannelDefaultAssignments()
    {
        return $this->container['sales_channel_default_assignments'];
    }

    /**
     * Sets sales_channel_default_assignments
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsSalesChannelDefaultAssignments|null $sales_channel_default_assignments sales_channel_default_assignments
     *
     * @return self
     */
    public function setSalesChannelDefaultAssignments($sales_channel_default_assignments)
    {
        $this->container['sales_channel_default_assignments'] = $sales_channel_default_assignments;

        return $this;
    }

    /**
     * Gets sales_channel_domains
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsSalesChannelDomains|null
     */
    public function getSalesChannelDomains()
    {
        return $this->container['sales_channel_domains'];
    }

    /**
     * Sets sales_channel_domains
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsSalesChannelDomains|null $sales_channel_domains sales_channel_domains
     *
     * @return self
     */
    public function setSalesChannelDomains($sales_channel_domains)
    {
        $this->container['sales_channel_domains'] = $sales_channel_domains;

        return $this;
    }

    /**
     * Gets customers
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsCustomers|null
     */
    public function getCustomers()
    {
        return $this->container['customers'];
    }

    /**
     * Sets customers
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsCustomers|null $customers customers
     *
     * @return self
     */
    public function setCustomers($customers)
    {
        $this->container['customers'] = $customers;

        return $this;
    }

    /**
     * Gets newsletter_recipients
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsNewsletterRecipients|null
     */
    public function getNewsletterRecipients()
    {
        return $this->container['newsletter_recipients'];
    }

    /**
     * Sets newsletter_recipients
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsNewsletterRecipients|null $newsletter_recipients newsletter_recipients
     *
     * @return self
     */
    public function setNewsletterRecipients($newsletter_recipients)
    {
        $this->container['newsletter_recipients'] = $newsletter_recipients;

        return $this;
    }

    /**
     * Gets orders
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsOrders|null
     */
    public function getOrders()
    {
        return $this->container['orders'];
    }

    /**
     * Sets orders
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsOrders|null $orders orders
     *
     * @return self
     */
    public function setOrders($orders)
    {
        $this->container['orders'] = $orders;

        return $this;
    }

    /**
     * Gets product_search_keywords
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductSearchKeywords|null
     */
    public function getProductSearchKeywords()
    {
        return $this->container['product_search_keywords'];
    }

    /**
     * Sets product_search_keywords
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductSearchKeywords|null $product_search_keywords product_search_keywords
     *
     * @return self
     */
    public function setProductSearchKeywords($product_search_keywords)
    {
        $this->container['product_search_keywords'] = $product_search_keywords;

        return $this;
    }

    /**
     * Gets product_keyword_dictionaries
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductKeywordDictionaries|null
     */
    public function getProductKeywordDictionaries()
    {
        return $this->container['product_keyword_dictionaries'];
    }

    /**
     * Sets product_keyword_dictionaries
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductKeywordDictionaries|null $product_keyword_dictionaries product_keyword_dictionaries
     *
     * @return self
     */
    public function setProductKeywordDictionaries($product_keyword_dictionaries)
    {
        $this->container['product_keyword_dictionaries'] = $product_keyword_dictionaries;

        return $this;
    }

    /**
     * Gets product_reviews
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductReviews|null
     */
    public function getProductReviews()
    {
        return $this->container['product_reviews'];
    }

    /**
     * Sets product_reviews
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductReviews|null $product_reviews product_reviews
     *
     * @return self
     */
    public function setProductReviews($product_reviews)
    {
        $this->container['product_reviews'] = $product_reviews;

        return $this;
    }

    /**
     * Gets product_search_config
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductSearchConfig|null
     */
    public function getProductSearchConfig()
    {
        return $this->container['product_search_config'];
    }

    /**
     * Sets product_search_config
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\LanguageJsonApiAllOfRelationshipsProductSearchConfig|null $product_search_config product_search_config
     *
     * @return self
     */
    public function setProductSearchConfig($product_search_config)
    {
        $this->container['product_search_config'] = $product_search_config;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


