<?php
/**
 * CurrencyJsonApiAllOfRelationships
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * The version of the OpenAPI document: 6.5.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\ShopwareAdminApiClient\Model;

use \ArrayAccess;
use \OpenAPI\ShopwareAdminApiClient\ObjectSerializer;

/**
 * CurrencyJsonApiAllOfRelationships Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CurrencyJsonApiAllOfRelationships implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CurrencyJsonApi_allOf_relationships';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'sales_channel_default_assignments' => '\OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsSalesChannelDefaultAssignments',
        'orders' => '\OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsOrders',
        'sales_channels' => '\OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsSalesChannels',
        'sales_channel_domains' => '\OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsSalesChannelDomains',
        'promotion_discount_prices' => '\OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsPromotionDiscountPrices',
        'product_exports' => '\OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsProductExports',
        'country_roundings' => '\OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsCountryRoundings'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'sales_channel_default_assignments' => null,
        'orders' => null,
        'sales_channels' => null,
        'sales_channel_domains' => null,
        'promotion_discount_prices' => null,
        'product_exports' => null,
        'country_roundings' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sales_channel_default_assignments' => 'salesChannelDefaultAssignments',
        'orders' => 'orders',
        'sales_channels' => 'salesChannels',
        'sales_channel_domains' => 'salesChannelDomains',
        'promotion_discount_prices' => 'promotionDiscountPrices',
        'product_exports' => 'productExports',
        'country_roundings' => 'countryRoundings'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sales_channel_default_assignments' => 'setSalesChannelDefaultAssignments',
        'orders' => 'setOrders',
        'sales_channels' => 'setSalesChannels',
        'sales_channel_domains' => 'setSalesChannelDomains',
        'promotion_discount_prices' => 'setPromotionDiscountPrices',
        'product_exports' => 'setProductExports',
        'country_roundings' => 'setCountryRoundings'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sales_channel_default_assignments' => 'getSalesChannelDefaultAssignments',
        'orders' => 'getOrders',
        'sales_channels' => 'getSalesChannels',
        'sales_channel_domains' => 'getSalesChannelDomains',
        'promotion_discount_prices' => 'getPromotionDiscountPrices',
        'product_exports' => 'getProductExports',
        'country_roundings' => 'getCountryRoundings'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sales_channel_default_assignments'] = $data['sales_channel_default_assignments'] ?? null;
        $this->container['orders'] = $data['orders'] ?? null;
        $this->container['sales_channels'] = $data['sales_channels'] ?? null;
        $this->container['sales_channel_domains'] = $data['sales_channel_domains'] ?? null;
        $this->container['promotion_discount_prices'] = $data['promotion_discount_prices'] ?? null;
        $this->container['product_exports'] = $data['product_exports'] ?? null;
        $this->container['country_roundings'] = $data['country_roundings'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sales_channel_default_assignments
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsSalesChannelDefaultAssignments|null
     */
    public function getSalesChannelDefaultAssignments()
    {
        return $this->container['sales_channel_default_assignments'];
    }

    /**
     * Sets sales_channel_default_assignments
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsSalesChannelDefaultAssignments|null $sales_channel_default_assignments sales_channel_default_assignments
     *
     * @return self
     */
    public function setSalesChannelDefaultAssignments($sales_channel_default_assignments)
    {
        $this->container['sales_channel_default_assignments'] = $sales_channel_default_assignments;

        return $this;
    }

    /**
     * Gets orders
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsOrders|null
     */
    public function getOrders()
    {
        return $this->container['orders'];
    }

    /**
     * Sets orders
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsOrders|null $orders orders
     *
     * @return self
     */
    public function setOrders($orders)
    {
        $this->container['orders'] = $orders;

        return $this;
    }

    /**
     * Gets sales_channels
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsSalesChannels|null
     */
    public function getSalesChannels()
    {
        return $this->container['sales_channels'];
    }

    /**
     * Sets sales_channels
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsSalesChannels|null $sales_channels sales_channels
     *
     * @return self
     */
    public function setSalesChannels($sales_channels)
    {
        $this->container['sales_channels'] = $sales_channels;

        return $this;
    }

    /**
     * Gets sales_channel_domains
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsSalesChannelDomains|null
     */
    public function getSalesChannelDomains()
    {
        return $this->container['sales_channel_domains'];
    }

    /**
     * Sets sales_channel_domains
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsSalesChannelDomains|null $sales_channel_domains sales_channel_domains
     *
     * @return self
     */
    public function setSalesChannelDomains($sales_channel_domains)
    {
        $this->container['sales_channel_domains'] = $sales_channel_domains;

        return $this;
    }

    /**
     * Gets promotion_discount_prices
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsPromotionDiscountPrices|null
     */
    public function getPromotionDiscountPrices()
    {
        return $this->container['promotion_discount_prices'];
    }

    /**
     * Sets promotion_discount_prices
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsPromotionDiscountPrices|null $promotion_discount_prices promotion_discount_prices
     *
     * @return self
     */
    public function setPromotionDiscountPrices($promotion_discount_prices)
    {
        $this->container['promotion_discount_prices'] = $promotion_discount_prices;

        return $this;
    }

    /**
     * Gets product_exports
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsProductExports|null
     */
    public function getProductExports()
    {
        return $this->container['product_exports'];
    }

    /**
     * Sets product_exports
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsProductExports|null $product_exports product_exports
     *
     * @return self
     */
    public function setProductExports($product_exports)
    {
        $this->container['product_exports'] = $product_exports;

        return $this;
    }

    /**
     * Gets country_roundings
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsCountryRoundings|null
     */
    public function getCountryRoundings()
    {
        return $this->container['country_roundings'];
    }

    /**
     * Sets country_roundings
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\CurrencyJsonApiAllOfRelationshipsCountryRoundings|null $country_roundings country_roundings
     *
     * @return self
     */
    public function setCountryRoundings($country_roundings)
    {
        $this->container['country_roundings'] = $country_roundings;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


