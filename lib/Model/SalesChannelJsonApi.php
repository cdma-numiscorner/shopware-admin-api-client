<?php
/**
 * SalesChannelJsonApi
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * The version of the OpenAPI document: 6.5.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\ShopwareAdminApiClient\Model;

use \ArrayAccess;
use \OpenAPI\ShopwareAdminApiClient\ObjectSerializer;

/**
 * SalesChannelJsonApi Class Doc Comment
 *
 * @category Class
 * @description Added since version: 6.0.0.0
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class SalesChannelJsonApi implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SalesChannelJsonApi';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'type' => 'string',
        'id' => 'string',
        'attributes' => 'map[string,object]',
        'relationships' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationships',
        'links' => 'map[string,\OpenAPI\ShopwareAdminApiClient\Model\Link]',
        'meta' => 'map[string,object]',
        'type_id' => 'string',
        'language_id' => 'string',
        'customer_group_id' => 'string',
        'currency_id' => 'string',
        'payment_method_id' => 'string',
        'shipping_method_id' => 'string',
        'country_id' => 'string',
        'analytics_id' => 'string',
        'navigation_category_id' => 'string',
        'navigation_category_version_id' => 'string',
        'navigation_category_depth' => 'int',
        'footer_category_id' => 'string',
        'footer_category_version_id' => 'string',
        'service_category_id' => 'string',
        'service_category_version_id' => 'string',
        'mail_header_footer_id' => 'string',
        'hreflang_default_domain_id' => 'string',
        'name' => 'string',
        'short_name' => 'string',
        'tax_calculation_type' => 'string',
        'access_key' => 'string',
        'configuration' => 'object',
        'active' => 'bool',
        'hreflang_active' => 'bool',
        'maintenance' => 'bool',
        'maintenance_ip_whitelist' => 'object[]',
        'custom_fields' => 'object',
        'payment_method_ids' => 'string[]',
        'home_cms_page_id' => 'string',
        'home_cms_page_version_id' => 'string',
        'home_slot_config' => 'object',
        'home_enabled' => 'bool',
        'home_name' => 'string',
        'home_meta_title' => 'string',
        'home_meta_description' => 'string',
        'home_keywords' => 'string',
        'created_at' => '\DateTime',
        'updated_at' => '\DateTime',
        'translated' => 'object',
        'extensions' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfExtensions'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'type' => null,
        'id' => null,
        'attributes' => null,
        'relationships' => null,
        'links' => null,
        'meta' => null,
        'type_id' => null,
        'language_id' => null,
        'customer_group_id' => null,
        'currency_id' => null,
        'payment_method_id' => null,
        'shipping_method_id' => null,
        'country_id' => null,
        'analytics_id' => null,
        'navigation_category_id' => null,
        'navigation_category_version_id' => null,
        'navigation_category_depth' => 'int64',
        'footer_category_id' => null,
        'footer_category_version_id' => null,
        'service_category_id' => null,
        'service_category_version_id' => null,
        'mail_header_footer_id' => null,
        'hreflang_default_domain_id' => null,
        'name' => null,
        'short_name' => null,
        'tax_calculation_type' => null,
        'access_key' => null,
        'configuration' => null,
        'active' => null,
        'hreflang_active' => null,
        'maintenance' => null,
        'maintenance_ip_whitelist' => null,
        'custom_fields' => null,
        'payment_method_ids' => null,
        'home_cms_page_id' => null,
        'home_cms_page_version_id' => null,
        'home_slot_config' => null,
        'home_enabled' => null,
        'home_name' => null,
        'home_meta_title' => null,
        'home_meta_description' => null,
        'home_keywords' => null,
        'created_at' => 'date-time',
        'updated_at' => 'date-time',
        'translated' => null,
        'extensions' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'type' => 'type',
        'id' => 'id',
        'attributes' => 'attributes',
        'relationships' => 'relationships',
        'links' => 'links',
        'meta' => 'meta',
        'type_id' => 'typeId',
        'language_id' => 'languageId',
        'customer_group_id' => 'customerGroupId',
        'currency_id' => 'currencyId',
        'payment_method_id' => 'paymentMethodId',
        'shipping_method_id' => 'shippingMethodId',
        'country_id' => 'countryId',
        'analytics_id' => 'analyticsId',
        'navigation_category_id' => 'navigationCategoryId',
        'navigation_category_version_id' => 'navigationCategoryVersionId',
        'navigation_category_depth' => 'navigationCategoryDepth',
        'footer_category_id' => 'footerCategoryId',
        'footer_category_version_id' => 'footerCategoryVersionId',
        'service_category_id' => 'serviceCategoryId',
        'service_category_version_id' => 'serviceCategoryVersionId',
        'mail_header_footer_id' => 'mailHeaderFooterId',
        'hreflang_default_domain_id' => 'hreflangDefaultDomainId',
        'name' => 'name',
        'short_name' => 'shortName',
        'tax_calculation_type' => 'taxCalculationType',
        'access_key' => 'accessKey',
        'configuration' => 'configuration',
        'active' => 'active',
        'hreflang_active' => 'hreflangActive',
        'maintenance' => 'maintenance',
        'maintenance_ip_whitelist' => 'maintenanceIpWhitelist',
        'custom_fields' => 'customFields',
        'payment_method_ids' => 'paymentMethodIds',
        'home_cms_page_id' => 'homeCmsPageId',
        'home_cms_page_version_id' => 'homeCmsPageVersionId',
        'home_slot_config' => 'homeSlotConfig',
        'home_enabled' => 'homeEnabled',
        'home_name' => 'homeName',
        'home_meta_title' => 'homeMetaTitle',
        'home_meta_description' => 'homeMetaDescription',
        'home_keywords' => 'homeKeywords',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'translated' => 'translated',
        'extensions' => 'extensions'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'type' => 'setType',
        'id' => 'setId',
        'attributes' => 'setAttributes',
        'relationships' => 'setRelationships',
        'links' => 'setLinks',
        'meta' => 'setMeta',
        'type_id' => 'setTypeId',
        'language_id' => 'setLanguageId',
        'customer_group_id' => 'setCustomerGroupId',
        'currency_id' => 'setCurrencyId',
        'payment_method_id' => 'setPaymentMethodId',
        'shipping_method_id' => 'setShippingMethodId',
        'country_id' => 'setCountryId',
        'analytics_id' => 'setAnalyticsId',
        'navigation_category_id' => 'setNavigationCategoryId',
        'navigation_category_version_id' => 'setNavigationCategoryVersionId',
        'navigation_category_depth' => 'setNavigationCategoryDepth',
        'footer_category_id' => 'setFooterCategoryId',
        'footer_category_version_id' => 'setFooterCategoryVersionId',
        'service_category_id' => 'setServiceCategoryId',
        'service_category_version_id' => 'setServiceCategoryVersionId',
        'mail_header_footer_id' => 'setMailHeaderFooterId',
        'hreflang_default_domain_id' => 'setHreflangDefaultDomainId',
        'name' => 'setName',
        'short_name' => 'setShortName',
        'tax_calculation_type' => 'setTaxCalculationType',
        'access_key' => 'setAccessKey',
        'configuration' => 'setConfiguration',
        'active' => 'setActive',
        'hreflang_active' => 'setHreflangActive',
        'maintenance' => 'setMaintenance',
        'maintenance_ip_whitelist' => 'setMaintenanceIpWhitelist',
        'custom_fields' => 'setCustomFields',
        'payment_method_ids' => 'setPaymentMethodIds',
        'home_cms_page_id' => 'setHomeCmsPageId',
        'home_cms_page_version_id' => 'setHomeCmsPageVersionId',
        'home_slot_config' => 'setHomeSlotConfig',
        'home_enabled' => 'setHomeEnabled',
        'home_name' => 'setHomeName',
        'home_meta_title' => 'setHomeMetaTitle',
        'home_meta_description' => 'setHomeMetaDescription',
        'home_keywords' => 'setHomeKeywords',
        'created_at' => 'setCreatedAt',
        'updated_at' => 'setUpdatedAt',
        'translated' => 'setTranslated',
        'extensions' => 'setExtensions'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'type' => 'getType',
        'id' => 'getId',
        'attributes' => 'getAttributes',
        'relationships' => 'getRelationships',
        'links' => 'getLinks',
        'meta' => 'getMeta',
        'type_id' => 'getTypeId',
        'language_id' => 'getLanguageId',
        'customer_group_id' => 'getCustomerGroupId',
        'currency_id' => 'getCurrencyId',
        'payment_method_id' => 'getPaymentMethodId',
        'shipping_method_id' => 'getShippingMethodId',
        'country_id' => 'getCountryId',
        'analytics_id' => 'getAnalyticsId',
        'navigation_category_id' => 'getNavigationCategoryId',
        'navigation_category_version_id' => 'getNavigationCategoryVersionId',
        'navigation_category_depth' => 'getNavigationCategoryDepth',
        'footer_category_id' => 'getFooterCategoryId',
        'footer_category_version_id' => 'getFooterCategoryVersionId',
        'service_category_id' => 'getServiceCategoryId',
        'service_category_version_id' => 'getServiceCategoryVersionId',
        'mail_header_footer_id' => 'getMailHeaderFooterId',
        'hreflang_default_domain_id' => 'getHreflangDefaultDomainId',
        'name' => 'getName',
        'short_name' => 'getShortName',
        'tax_calculation_type' => 'getTaxCalculationType',
        'access_key' => 'getAccessKey',
        'configuration' => 'getConfiguration',
        'active' => 'getActive',
        'hreflang_active' => 'getHreflangActive',
        'maintenance' => 'getMaintenance',
        'maintenance_ip_whitelist' => 'getMaintenanceIpWhitelist',
        'custom_fields' => 'getCustomFields',
        'payment_method_ids' => 'getPaymentMethodIds',
        'home_cms_page_id' => 'getHomeCmsPageId',
        'home_cms_page_version_id' => 'getHomeCmsPageVersionId',
        'home_slot_config' => 'getHomeSlotConfig',
        'home_enabled' => 'getHomeEnabled',
        'home_name' => 'getHomeName',
        'home_meta_title' => 'getHomeMetaTitle',
        'home_meta_description' => 'getHomeMetaDescription',
        'home_keywords' => 'getHomeKeywords',
        'created_at' => 'getCreatedAt',
        'updated_at' => 'getUpdatedAt',
        'translated' => 'getTranslated',
        'extensions' => 'getExtensions'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['type'] = $data['type'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['attributes'] = $data['attributes'] ?? null;
        $this->container['relationships'] = $data['relationships'] ?? null;
        $this->container['links'] = $data['links'] ?? null;
        $this->container['meta'] = $data['meta'] ?? null;
        $this->container['type_id'] = $data['type_id'] ?? null;
        $this->container['language_id'] = $data['language_id'] ?? null;
        $this->container['customer_group_id'] = $data['customer_group_id'] ?? null;
        $this->container['currency_id'] = $data['currency_id'] ?? null;
        $this->container['payment_method_id'] = $data['payment_method_id'] ?? null;
        $this->container['shipping_method_id'] = $data['shipping_method_id'] ?? null;
        $this->container['country_id'] = $data['country_id'] ?? null;
        $this->container['analytics_id'] = $data['analytics_id'] ?? null;
        $this->container['navigation_category_id'] = $data['navigation_category_id'] ?? null;
        $this->container['navigation_category_version_id'] = $data['navigation_category_version_id'] ?? null;
        $this->container['navigation_category_depth'] = $data['navigation_category_depth'] ?? null;
        $this->container['footer_category_id'] = $data['footer_category_id'] ?? null;
        $this->container['footer_category_version_id'] = $data['footer_category_version_id'] ?? null;
        $this->container['service_category_id'] = $data['service_category_id'] ?? null;
        $this->container['service_category_version_id'] = $data['service_category_version_id'] ?? null;
        $this->container['mail_header_footer_id'] = $data['mail_header_footer_id'] ?? null;
        $this->container['hreflang_default_domain_id'] = $data['hreflang_default_domain_id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['short_name'] = $data['short_name'] ?? null;
        $this->container['tax_calculation_type'] = $data['tax_calculation_type'] ?? null;
        $this->container['access_key'] = $data['access_key'] ?? null;
        $this->container['configuration'] = $data['configuration'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['hreflang_active'] = $data['hreflang_active'] ?? null;
        $this->container['maintenance'] = $data['maintenance'] ?? null;
        $this->container['maintenance_ip_whitelist'] = $data['maintenance_ip_whitelist'] ?? null;
        $this->container['custom_fields'] = $data['custom_fields'] ?? null;
        $this->container['payment_method_ids'] = $data['payment_method_ids'] ?? null;
        $this->container['home_cms_page_id'] = $data['home_cms_page_id'] ?? null;
        $this->container['home_cms_page_version_id'] = $data['home_cms_page_version_id'] ?? null;
        $this->container['home_slot_config'] = $data['home_slot_config'] ?? null;
        $this->container['home_enabled'] = $data['home_enabled'] ?? null;
        $this->container['home_name'] = $data['home_name'] ?? null;
        $this->container['home_meta_title'] = $data['home_meta_title'] ?? null;
        $this->container['home_meta_description'] = $data['home_meta_description'] ?? null;
        $this->container['home_keywords'] = $data['home_keywords'] ?? null;
        $this->container['created_at'] = $data['created_at'] ?? null;
        $this->container['updated_at'] = $data['updated_at'] ?? null;
        $this->container['translated'] = $data['translated'] ?? null;
        $this->container['extensions'] = $data['extensions'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['id'])) {
            $invalidProperties[] = "invalid value for 'id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['type_id'] === null) {
            $invalidProperties[] = "'type_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['type_id'])) {
            $invalidProperties[] = "invalid value for 'type_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['language_id'] === null) {
            $invalidProperties[] = "'language_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['language_id'])) {
            $invalidProperties[] = "invalid value for 'language_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['customer_group_id'] === null) {
            $invalidProperties[] = "'customer_group_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['customer_group_id'])) {
            $invalidProperties[] = "invalid value for 'customer_group_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['currency_id'] === null) {
            $invalidProperties[] = "'currency_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['currency_id'])) {
            $invalidProperties[] = "invalid value for 'currency_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['payment_method_id'] === null) {
            $invalidProperties[] = "'payment_method_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['payment_method_id'])) {
            $invalidProperties[] = "invalid value for 'payment_method_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['shipping_method_id'] === null) {
            $invalidProperties[] = "'shipping_method_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['shipping_method_id'])) {
            $invalidProperties[] = "invalid value for 'shipping_method_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['country_id'] === null) {
            $invalidProperties[] = "'country_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['country_id'])) {
            $invalidProperties[] = "invalid value for 'country_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['analytics_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['analytics_id'])) {
            $invalidProperties[] = "invalid value for 'analytics_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['navigation_category_id'] === null) {
            $invalidProperties[] = "'navigation_category_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['navigation_category_id'])) {
            $invalidProperties[] = "invalid value for 'navigation_category_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['navigation_category_version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['navigation_category_version_id'])) {
            $invalidProperties[] = "invalid value for 'navigation_category_version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['footer_category_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['footer_category_id'])) {
            $invalidProperties[] = "invalid value for 'footer_category_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['footer_category_version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['footer_category_version_id'])) {
            $invalidProperties[] = "invalid value for 'footer_category_version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['service_category_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['service_category_id'])) {
            $invalidProperties[] = "invalid value for 'service_category_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['service_category_version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['service_category_version_id'])) {
            $invalidProperties[] = "invalid value for 'service_category_version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['mail_header_footer_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['mail_header_footer_id'])) {
            $invalidProperties[] = "invalid value for 'mail_header_footer_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['hreflang_default_domain_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['hreflang_default_domain_id'])) {
            $invalidProperties[] = "invalid value for 'hreflang_default_domain_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['access_key'] === null) {
            $invalidProperties[] = "'access_key' can't be null";
        }
        if (!is_null($this->container['home_cms_page_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['home_cms_page_id'])) {
            $invalidProperties[] = "invalid value for 'home_cms_page_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['home_cms_page_version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['home_cms_page_version_id'])) {
            $invalidProperties[] = "invalid value for 'home_cms_page_version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['home_enabled'] === null) {
            $invalidProperties[] = "'home_enabled' can't be null";
        }
        if ($this->container['created_at'] === null) {
            $invalidProperties[] = "'created_at' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return self
     */
    public function setId($id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $id))) {
            throw new \InvalidArgumentException("invalid value for $id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets attributes
     *
     * @return map[string,object]|null
     */
    public function getAttributes()
    {
        return $this->container['attributes'];
    }

    /**
     * Sets attributes
     *
     * @param map[string,object]|null $attributes Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.
     *
     * @return self
     */
    public function setAttributes($attributes)
    {
        $this->container['attributes'] = $attributes;

        return $this;
    }

    /**
     * Gets relationships
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationships|null
     */
    public function getRelationships()
    {
        return $this->container['relationships'];
    }

    /**
     * Sets relationships
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationships|null $relationships relationships
     *
     * @return self
     */
    public function setRelationships($relationships)
    {
        $this->container['relationships'] = $relationships;

        return $this;
    }

    /**
     * Gets links
     *
     * @return map[string,\OpenAPI\ShopwareAdminApiClient\Model\Link]|null
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     *
     * @param map[string,\OpenAPI\ShopwareAdminApiClient\Model\Link]|null $links links
     *
     * @return self
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return map[string,object]|null
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param map[string,object]|null $meta Non-standard meta-information that can not be represented as an attribute or relationship.
     *
     * @return self
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }

    /**
     * Gets type_id
     *
     * @return string
     */
    public function getTypeId()
    {
        return $this->container['type_id'];
    }

    /**
     * Sets type_id
     *
     * @param string $type_id type_id
     *
     * @return self
     */
    public function setTypeId($type_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $type_id))) {
            throw new \InvalidArgumentException("invalid value for $type_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['type_id'] = $type_id;

        return $this;
    }

    /**
     * Gets language_id
     *
     * @return string
     */
    public function getLanguageId()
    {
        return $this->container['language_id'];
    }

    /**
     * Sets language_id
     *
     * @param string $language_id language_id
     *
     * @return self
     */
    public function setLanguageId($language_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $language_id))) {
            throw new \InvalidArgumentException("invalid value for $language_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['language_id'] = $language_id;

        return $this;
    }

    /**
     * Gets customer_group_id
     *
     * @return string
     */
    public function getCustomerGroupId()
    {
        return $this->container['customer_group_id'];
    }

    /**
     * Sets customer_group_id
     *
     * @param string $customer_group_id customer_group_id
     *
     * @return self
     */
    public function setCustomerGroupId($customer_group_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $customer_group_id))) {
            throw new \InvalidArgumentException("invalid value for $customer_group_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['customer_group_id'] = $customer_group_id;

        return $this;
    }

    /**
     * Gets currency_id
     *
     * @return string
     */
    public function getCurrencyId()
    {
        return $this->container['currency_id'];
    }

    /**
     * Sets currency_id
     *
     * @param string $currency_id currency_id
     *
     * @return self
     */
    public function setCurrencyId($currency_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $currency_id))) {
            throw new \InvalidArgumentException("invalid value for $currency_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['currency_id'] = $currency_id;

        return $this;
    }

    /**
     * Gets payment_method_id
     *
     * @return string
     */
    public function getPaymentMethodId()
    {
        return $this->container['payment_method_id'];
    }

    /**
     * Sets payment_method_id
     *
     * @param string $payment_method_id payment_method_id
     *
     * @return self
     */
    public function setPaymentMethodId($payment_method_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $payment_method_id))) {
            throw new \InvalidArgumentException("invalid value for $payment_method_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['payment_method_id'] = $payment_method_id;

        return $this;
    }

    /**
     * Gets shipping_method_id
     *
     * @return string
     */
    public function getShippingMethodId()
    {
        return $this->container['shipping_method_id'];
    }

    /**
     * Sets shipping_method_id
     *
     * @param string $shipping_method_id shipping_method_id
     *
     * @return self
     */
    public function setShippingMethodId($shipping_method_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $shipping_method_id))) {
            throw new \InvalidArgumentException("invalid value for $shipping_method_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['shipping_method_id'] = $shipping_method_id;

        return $this;
    }

    /**
     * Gets country_id
     *
     * @return string
     */
    public function getCountryId()
    {
        return $this->container['country_id'];
    }

    /**
     * Sets country_id
     *
     * @param string $country_id country_id
     *
     * @return self
     */
    public function setCountryId($country_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $country_id))) {
            throw new \InvalidArgumentException("invalid value for $country_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['country_id'] = $country_id;

        return $this;
    }

    /**
     * Gets analytics_id
     *
     * @return string|null
     */
    public function getAnalyticsId()
    {
        return $this->container['analytics_id'];
    }

    /**
     * Sets analytics_id
     *
     * @param string|null $analytics_id analytics_id
     *
     * @return self
     */
    public function setAnalyticsId($analytics_id)
    {

        if (!is_null($analytics_id) && (!preg_match("/^[0-9a-f]{32}$/", $analytics_id))) {
            throw new \InvalidArgumentException("invalid value for $analytics_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['analytics_id'] = $analytics_id;

        return $this;
    }

    /**
     * Gets navigation_category_id
     *
     * @return string
     */
    public function getNavigationCategoryId()
    {
        return $this->container['navigation_category_id'];
    }

    /**
     * Sets navigation_category_id
     *
     * @param string $navigation_category_id navigation_category_id
     *
     * @return self
     */
    public function setNavigationCategoryId($navigation_category_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $navigation_category_id))) {
            throw new \InvalidArgumentException("invalid value for $navigation_category_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['navigation_category_id'] = $navigation_category_id;

        return $this;
    }

    /**
     * Gets navigation_category_version_id
     *
     * @return string|null
     */
    public function getNavigationCategoryVersionId()
    {
        return $this->container['navigation_category_version_id'];
    }

    /**
     * Sets navigation_category_version_id
     *
     * @param string|null $navigation_category_version_id navigation_category_version_id
     *
     * @return self
     */
    public function setNavigationCategoryVersionId($navigation_category_version_id)
    {

        if (!is_null($navigation_category_version_id) && (!preg_match("/^[0-9a-f]{32}$/", $navigation_category_version_id))) {
            throw new \InvalidArgumentException("invalid value for $navigation_category_version_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['navigation_category_version_id'] = $navigation_category_version_id;

        return $this;
    }

    /**
     * Gets navigation_category_depth
     *
     * @return int|null
     */
    public function getNavigationCategoryDepth()
    {
        return $this->container['navigation_category_depth'];
    }

    /**
     * Sets navigation_category_depth
     *
     * @param int|null $navigation_category_depth navigation_category_depth
     *
     * @return self
     */
    public function setNavigationCategoryDepth($navigation_category_depth)
    {
        $this->container['navigation_category_depth'] = $navigation_category_depth;

        return $this;
    }

    /**
     * Gets footer_category_id
     *
     * @return string|null
     */
    public function getFooterCategoryId()
    {
        return $this->container['footer_category_id'];
    }

    /**
     * Sets footer_category_id
     *
     * @param string|null $footer_category_id footer_category_id
     *
     * @return self
     */
    public function setFooterCategoryId($footer_category_id)
    {

        if (!is_null($footer_category_id) && (!preg_match("/^[0-9a-f]{32}$/", $footer_category_id))) {
            throw new \InvalidArgumentException("invalid value for $footer_category_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['footer_category_id'] = $footer_category_id;

        return $this;
    }

    /**
     * Gets footer_category_version_id
     *
     * @return string|null
     */
    public function getFooterCategoryVersionId()
    {
        return $this->container['footer_category_version_id'];
    }

    /**
     * Sets footer_category_version_id
     *
     * @param string|null $footer_category_version_id footer_category_version_id
     *
     * @return self
     */
    public function setFooterCategoryVersionId($footer_category_version_id)
    {

        if (!is_null($footer_category_version_id) && (!preg_match("/^[0-9a-f]{32}$/", $footer_category_version_id))) {
            throw new \InvalidArgumentException("invalid value for $footer_category_version_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['footer_category_version_id'] = $footer_category_version_id;

        return $this;
    }

    /**
     * Gets service_category_id
     *
     * @return string|null
     */
    public function getServiceCategoryId()
    {
        return $this->container['service_category_id'];
    }

    /**
     * Sets service_category_id
     *
     * @param string|null $service_category_id service_category_id
     *
     * @return self
     */
    public function setServiceCategoryId($service_category_id)
    {

        if (!is_null($service_category_id) && (!preg_match("/^[0-9a-f]{32}$/", $service_category_id))) {
            throw new \InvalidArgumentException("invalid value for $service_category_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['service_category_id'] = $service_category_id;

        return $this;
    }

    /**
     * Gets service_category_version_id
     *
     * @return string|null
     */
    public function getServiceCategoryVersionId()
    {
        return $this->container['service_category_version_id'];
    }

    /**
     * Sets service_category_version_id
     *
     * @param string|null $service_category_version_id service_category_version_id
     *
     * @return self
     */
    public function setServiceCategoryVersionId($service_category_version_id)
    {

        if (!is_null($service_category_version_id) && (!preg_match("/^[0-9a-f]{32}$/", $service_category_version_id))) {
            throw new \InvalidArgumentException("invalid value for $service_category_version_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['service_category_version_id'] = $service_category_version_id;

        return $this;
    }

    /**
     * Gets mail_header_footer_id
     *
     * @return string|null
     */
    public function getMailHeaderFooterId()
    {
        return $this->container['mail_header_footer_id'];
    }

    /**
     * Sets mail_header_footer_id
     *
     * @param string|null $mail_header_footer_id mail_header_footer_id
     *
     * @return self
     */
    public function setMailHeaderFooterId($mail_header_footer_id)
    {

        if (!is_null($mail_header_footer_id) && (!preg_match("/^[0-9a-f]{32}$/", $mail_header_footer_id))) {
            throw new \InvalidArgumentException("invalid value for $mail_header_footer_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['mail_header_footer_id'] = $mail_header_footer_id;

        return $this;
    }

    /**
     * Gets hreflang_default_domain_id
     *
     * @return string|null
     */
    public function getHreflangDefaultDomainId()
    {
        return $this->container['hreflang_default_domain_id'];
    }

    /**
     * Sets hreflang_default_domain_id
     *
     * @param string|null $hreflang_default_domain_id hreflang_default_domain_id
     *
     * @return self
     */
    public function setHreflangDefaultDomainId($hreflang_default_domain_id)
    {

        if (!is_null($hreflang_default_domain_id) && (!preg_match("/^[0-9a-f]{32}$/", $hreflang_default_domain_id))) {
            throw new \InvalidArgumentException("invalid value for $hreflang_default_domain_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['hreflang_default_domain_id'] = $hreflang_default_domain_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets short_name
     *
     * @return string|null
     */
    public function getShortName()
    {
        return $this->container['short_name'];
    }

    /**
     * Sets short_name
     *
     * @param string|null $short_name short_name
     *
     * @return self
     */
    public function setShortName($short_name)
    {
        $this->container['short_name'] = $short_name;

        return $this;
    }

    /**
     * Gets tax_calculation_type
     *
     * @return string|null
     */
    public function getTaxCalculationType()
    {
        return $this->container['tax_calculation_type'];
    }

    /**
     * Sets tax_calculation_type
     *
     * @param string|null $tax_calculation_type tax_calculation_type
     *
     * @return self
     */
    public function setTaxCalculationType($tax_calculation_type)
    {
        $this->container['tax_calculation_type'] = $tax_calculation_type;

        return $this;
    }

    /**
     * Gets access_key
     *
     * @return string
     */
    public function getAccessKey()
    {
        return $this->container['access_key'];
    }

    /**
     * Sets access_key
     *
     * @param string $access_key access_key
     *
     * @return self
     */
    public function setAccessKey($access_key)
    {
        $this->container['access_key'] = $access_key;

        return $this;
    }

    /**
     * Gets configuration
     *
     * @return object|null
     */
    public function getConfiguration()
    {
        return $this->container['configuration'];
    }

    /**
     * Sets configuration
     *
     * @param object|null $configuration configuration
     *
     * @return self
     */
    public function setConfiguration($configuration)
    {
        $this->container['configuration'] = $configuration;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool|null $active active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets hreflang_active
     *
     * @return bool|null
     */
    public function getHreflangActive()
    {
        return $this->container['hreflang_active'];
    }

    /**
     * Sets hreflang_active
     *
     * @param bool|null $hreflang_active hreflang_active
     *
     * @return self
     */
    public function setHreflangActive($hreflang_active)
    {
        $this->container['hreflang_active'] = $hreflang_active;

        return $this;
    }

    /**
     * Gets maintenance
     *
     * @return bool|null
     */
    public function getMaintenance()
    {
        return $this->container['maintenance'];
    }

    /**
     * Sets maintenance
     *
     * @param bool|null $maintenance maintenance
     *
     * @return self
     */
    public function setMaintenance($maintenance)
    {
        $this->container['maintenance'] = $maintenance;

        return $this;
    }

    /**
     * Gets maintenance_ip_whitelist
     *
     * @return object[]|null
     */
    public function getMaintenanceIpWhitelist()
    {
        return $this->container['maintenance_ip_whitelist'];
    }

    /**
     * Sets maintenance_ip_whitelist
     *
     * @param object[]|null $maintenance_ip_whitelist maintenance_ip_whitelist
     *
     * @return self
     */
    public function setMaintenanceIpWhitelist($maintenance_ip_whitelist)
    {
        $this->container['maintenance_ip_whitelist'] = $maintenance_ip_whitelist;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return object|null
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param object|null $custom_fields custom_fields
     *
     * @return self
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }

    /**
     * Gets payment_method_ids
     *
     * @return string[]|null
     */
    public function getPaymentMethodIds()
    {
        return $this->container['payment_method_ids'];
    }

    /**
     * Sets payment_method_ids
     *
     * @param string[]|null $payment_method_ids payment_method_ids
     *
     * @return self
     */
    public function setPaymentMethodIds($payment_method_ids)
    {
        $this->container['payment_method_ids'] = $payment_method_ids;

        return $this;
    }

    /**
     * Gets home_cms_page_id
     *
     * @return string|null
     */
    public function getHomeCmsPageId()
    {
        return $this->container['home_cms_page_id'];
    }

    /**
     * Sets home_cms_page_id
     *
     * @param string|null $home_cms_page_id home_cms_page_id
     *
     * @return self
     */
    public function setHomeCmsPageId($home_cms_page_id)
    {

        if (!is_null($home_cms_page_id) && (!preg_match("/^[0-9a-f]{32}$/", $home_cms_page_id))) {
            throw new \InvalidArgumentException("invalid value for $home_cms_page_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['home_cms_page_id'] = $home_cms_page_id;

        return $this;
    }

    /**
     * Gets home_cms_page_version_id
     *
     * @return string|null
     */
    public function getHomeCmsPageVersionId()
    {
        return $this->container['home_cms_page_version_id'];
    }

    /**
     * Sets home_cms_page_version_id
     *
     * @param string|null $home_cms_page_version_id home_cms_page_version_id
     *
     * @return self
     */
    public function setHomeCmsPageVersionId($home_cms_page_version_id)
    {

        if (!is_null($home_cms_page_version_id) && (!preg_match("/^[0-9a-f]{32}$/", $home_cms_page_version_id))) {
            throw new \InvalidArgumentException("invalid value for $home_cms_page_version_id when calling SalesChannelJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['home_cms_page_version_id'] = $home_cms_page_version_id;

        return $this;
    }

    /**
     * Gets home_slot_config
     *
     * @return object|null
     */
    public function getHomeSlotConfig()
    {
        return $this->container['home_slot_config'];
    }

    /**
     * Sets home_slot_config
     *
     * @param object|null $home_slot_config home_slot_config
     *
     * @return self
     */
    public function setHomeSlotConfig($home_slot_config)
    {
        $this->container['home_slot_config'] = $home_slot_config;

        return $this;
    }

    /**
     * Gets home_enabled
     *
     * @return bool
     */
    public function getHomeEnabled()
    {
        return $this->container['home_enabled'];
    }

    /**
     * Sets home_enabled
     *
     * @param bool $home_enabled home_enabled
     *
     * @return self
     */
    public function setHomeEnabled($home_enabled)
    {
        $this->container['home_enabled'] = $home_enabled;

        return $this;
    }

    /**
     * Gets home_name
     *
     * @return string|null
     */
    public function getHomeName()
    {
        return $this->container['home_name'];
    }

    /**
     * Sets home_name
     *
     * @param string|null $home_name home_name
     *
     * @return self
     */
    public function setHomeName($home_name)
    {
        $this->container['home_name'] = $home_name;

        return $this;
    }

    /**
     * Gets home_meta_title
     *
     * @return string|null
     */
    public function getHomeMetaTitle()
    {
        return $this->container['home_meta_title'];
    }

    /**
     * Sets home_meta_title
     *
     * @param string|null $home_meta_title home_meta_title
     *
     * @return self
     */
    public function setHomeMetaTitle($home_meta_title)
    {
        $this->container['home_meta_title'] = $home_meta_title;

        return $this;
    }

    /**
     * Gets home_meta_description
     *
     * @return string|null
     */
    public function getHomeMetaDescription()
    {
        return $this->container['home_meta_description'];
    }

    /**
     * Sets home_meta_description
     *
     * @param string|null $home_meta_description home_meta_description
     *
     * @return self
     */
    public function setHomeMetaDescription($home_meta_description)
    {
        $this->container['home_meta_description'] = $home_meta_description;

        return $this;
    }

    /**
     * Gets home_keywords
     *
     * @return string|null
     */
    public function getHomeKeywords()
    {
        return $this->container['home_keywords'];
    }

    /**
     * Sets home_keywords
     *
     * @param string|null $home_keywords home_keywords
     *
     * @return self
     */
    public function setHomeKeywords($home_keywords)
    {
        $this->container['home_keywords'] = $home_keywords;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime $created_at created_at
     *
     * @return self
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime|null $updated_at updated_at
     *
     * @return self
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets translated
     *
     * @return object|null
     */
    public function getTranslated()
    {
        return $this->container['translated'];
    }

    /**
     * Sets translated
     *
     * @param object|null $translated translated
     *
     * @return self
     */
    public function setTranslated($translated)
    {
        $this->container['translated'] = $translated;

        return $this;
    }

    /**
     * Gets extensions
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfExtensions|null
     */
    public function getExtensions()
    {
        return $this->container['extensions'];
    }

    /**
     * Sets extensions
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfExtensions|null $extensions extensions
     *
     * @return self
     */
    public function setExtensions($extensions)
    {
        $this->container['extensions'] = $extensions;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


