<?php
/**
 * UserJsonApiAllOfRelationships
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * The version of the OpenAPI document: 6.5.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\ShopwareAdminApiClient\Model;

use \ArrayAccess;
use \OpenAPI\ShopwareAdminApiClient\ObjectSerializer;

/**
 * UserJsonApiAllOfRelationships Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class UserJsonApiAllOfRelationships implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'UserJsonApi_allOf_relationships';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'locale' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsLocale',
        'avatar_media' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsAvatarMedia',
        'media' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsMedia',
        'access_keys' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsAccessKeys',
        'configs' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsConfigs',
        'state_machine_history_entries' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsStateMachineHistoryEntries',
        'import_export_log_entries' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsImportExportLogEntries',
        'acl_roles' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsAclRoles',
        'recovery_user' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsRecoveryUser',
        'created_orders' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsCreatedOrders',
        'updated_orders' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsUpdatedOrders',
        'created_customers' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsCreatedCustomers',
        'updated_customers' => '\OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsUpdatedCustomers'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'locale' => null,
        'avatar_media' => null,
        'media' => null,
        'access_keys' => null,
        'configs' => null,
        'state_machine_history_entries' => null,
        'import_export_log_entries' => null,
        'acl_roles' => null,
        'recovery_user' => null,
        'created_orders' => null,
        'updated_orders' => null,
        'created_customers' => null,
        'updated_customers' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'locale' => 'locale',
        'avatar_media' => 'avatarMedia',
        'media' => 'media',
        'access_keys' => 'accessKeys',
        'configs' => 'configs',
        'state_machine_history_entries' => 'stateMachineHistoryEntries',
        'import_export_log_entries' => 'importExportLogEntries',
        'acl_roles' => 'aclRoles',
        'recovery_user' => 'recoveryUser',
        'created_orders' => 'createdOrders',
        'updated_orders' => 'updatedOrders',
        'created_customers' => 'createdCustomers',
        'updated_customers' => 'updatedCustomers'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'locale' => 'setLocale',
        'avatar_media' => 'setAvatarMedia',
        'media' => 'setMedia',
        'access_keys' => 'setAccessKeys',
        'configs' => 'setConfigs',
        'state_machine_history_entries' => 'setStateMachineHistoryEntries',
        'import_export_log_entries' => 'setImportExportLogEntries',
        'acl_roles' => 'setAclRoles',
        'recovery_user' => 'setRecoveryUser',
        'created_orders' => 'setCreatedOrders',
        'updated_orders' => 'setUpdatedOrders',
        'created_customers' => 'setCreatedCustomers',
        'updated_customers' => 'setUpdatedCustomers'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'locale' => 'getLocale',
        'avatar_media' => 'getAvatarMedia',
        'media' => 'getMedia',
        'access_keys' => 'getAccessKeys',
        'configs' => 'getConfigs',
        'state_machine_history_entries' => 'getStateMachineHistoryEntries',
        'import_export_log_entries' => 'getImportExportLogEntries',
        'acl_roles' => 'getAclRoles',
        'recovery_user' => 'getRecoveryUser',
        'created_orders' => 'getCreatedOrders',
        'updated_orders' => 'getUpdatedOrders',
        'created_customers' => 'getCreatedCustomers',
        'updated_customers' => 'getUpdatedCustomers'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['locale'] = $data['locale'] ?? null;
        $this->container['avatar_media'] = $data['avatar_media'] ?? null;
        $this->container['media'] = $data['media'] ?? null;
        $this->container['access_keys'] = $data['access_keys'] ?? null;
        $this->container['configs'] = $data['configs'] ?? null;
        $this->container['state_machine_history_entries'] = $data['state_machine_history_entries'] ?? null;
        $this->container['import_export_log_entries'] = $data['import_export_log_entries'] ?? null;
        $this->container['acl_roles'] = $data['acl_roles'] ?? null;
        $this->container['recovery_user'] = $data['recovery_user'] ?? null;
        $this->container['created_orders'] = $data['created_orders'] ?? null;
        $this->container['updated_orders'] = $data['updated_orders'] ?? null;
        $this->container['created_customers'] = $data['created_customers'] ?? null;
        $this->container['updated_customers'] = $data['updated_customers'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets locale
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsLocale|null
     */
    public function getLocale()
    {
        return $this->container['locale'];
    }

    /**
     * Sets locale
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsLocale|null $locale locale
     *
     * @return self
     */
    public function setLocale($locale)
    {
        $this->container['locale'] = $locale;

        return $this;
    }

    /**
     * Gets avatar_media
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsAvatarMedia|null
     */
    public function getAvatarMedia()
    {
        return $this->container['avatar_media'];
    }

    /**
     * Sets avatar_media
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsAvatarMedia|null $avatar_media avatar_media
     *
     * @return self
     */
    public function setAvatarMedia($avatar_media)
    {
        $this->container['avatar_media'] = $avatar_media;

        return $this;
    }

    /**
     * Gets media
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsMedia|null
     */
    public function getMedia()
    {
        return $this->container['media'];
    }

    /**
     * Sets media
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsMedia|null $media media
     *
     * @return self
     */
    public function setMedia($media)
    {
        $this->container['media'] = $media;

        return $this;
    }

    /**
     * Gets access_keys
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsAccessKeys|null
     */
    public function getAccessKeys()
    {
        return $this->container['access_keys'];
    }

    /**
     * Sets access_keys
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsAccessKeys|null $access_keys access_keys
     *
     * @return self
     */
    public function setAccessKeys($access_keys)
    {
        $this->container['access_keys'] = $access_keys;

        return $this;
    }

    /**
     * Gets configs
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsConfigs|null
     */
    public function getConfigs()
    {
        return $this->container['configs'];
    }

    /**
     * Sets configs
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsConfigs|null $configs configs
     *
     * @return self
     */
    public function setConfigs($configs)
    {
        $this->container['configs'] = $configs;

        return $this;
    }

    /**
     * Gets state_machine_history_entries
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsStateMachineHistoryEntries|null
     */
    public function getStateMachineHistoryEntries()
    {
        return $this->container['state_machine_history_entries'];
    }

    /**
     * Sets state_machine_history_entries
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsStateMachineHistoryEntries|null $state_machine_history_entries state_machine_history_entries
     *
     * @return self
     */
    public function setStateMachineHistoryEntries($state_machine_history_entries)
    {
        $this->container['state_machine_history_entries'] = $state_machine_history_entries;

        return $this;
    }

    /**
     * Gets import_export_log_entries
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsImportExportLogEntries|null
     */
    public function getImportExportLogEntries()
    {
        return $this->container['import_export_log_entries'];
    }

    /**
     * Sets import_export_log_entries
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsImportExportLogEntries|null $import_export_log_entries import_export_log_entries
     *
     * @return self
     */
    public function setImportExportLogEntries($import_export_log_entries)
    {
        $this->container['import_export_log_entries'] = $import_export_log_entries;

        return $this;
    }

    /**
     * Gets acl_roles
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsAclRoles|null
     */
    public function getAclRoles()
    {
        return $this->container['acl_roles'];
    }

    /**
     * Sets acl_roles
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsAclRoles|null $acl_roles acl_roles
     *
     * @return self
     */
    public function setAclRoles($acl_roles)
    {
        $this->container['acl_roles'] = $acl_roles;

        return $this;
    }

    /**
     * Gets recovery_user
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsRecoveryUser|null
     */
    public function getRecoveryUser()
    {
        return $this->container['recovery_user'];
    }

    /**
     * Sets recovery_user
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsRecoveryUser|null $recovery_user recovery_user
     *
     * @return self
     */
    public function setRecoveryUser($recovery_user)
    {
        $this->container['recovery_user'] = $recovery_user;

        return $this;
    }

    /**
     * Gets created_orders
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsCreatedOrders|null
     */
    public function getCreatedOrders()
    {
        return $this->container['created_orders'];
    }

    /**
     * Sets created_orders
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsCreatedOrders|null $created_orders created_orders
     *
     * @return self
     */
    public function setCreatedOrders($created_orders)
    {
        $this->container['created_orders'] = $created_orders;

        return $this;
    }

    /**
     * Gets updated_orders
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsUpdatedOrders|null
     */
    public function getUpdatedOrders()
    {
        return $this->container['updated_orders'];
    }

    /**
     * Sets updated_orders
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsUpdatedOrders|null $updated_orders updated_orders
     *
     * @return self
     */
    public function setUpdatedOrders($updated_orders)
    {
        $this->container['updated_orders'] = $updated_orders;

        return $this;
    }

    /**
     * Gets created_customers
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsCreatedCustomers|null
     */
    public function getCreatedCustomers()
    {
        return $this->container['created_customers'];
    }

    /**
     * Sets created_customers
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsCreatedCustomers|null $created_customers created_customers
     *
     * @return self
     */
    public function setCreatedCustomers($created_customers)
    {
        $this->container['created_customers'] = $created_customers;

        return $this;
    }

    /**
     * Gets updated_customers
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsUpdatedCustomers|null
     */
    public function getUpdatedCustomers()
    {
        return $this->container['updated_customers'];
    }

    /**
     * Sets updated_customers
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\UserJsonApiAllOfRelationshipsUpdatedCustomers|null $updated_customers updated_customers
     *
     * @return self
     */
    public function setUpdatedCustomers($updated_customers)
    {
        $this->container['updated_customers'] = $updated_customers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


