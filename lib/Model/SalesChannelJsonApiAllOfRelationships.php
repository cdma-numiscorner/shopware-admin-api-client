<?php
/**
 * SalesChannelJsonApiAllOfRelationships
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * The version of the OpenAPI document: 6.5.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\ShopwareAdminApiClient\Model;

use \ArrayAccess;
use \OpenAPI\ShopwareAdminApiClient\ObjectSerializer;

/**
 * SalesChannelJsonApiAllOfRelationships Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class SalesChannelJsonApiAllOfRelationships implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'SalesChannelJsonApi_allOf_relationships';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'currencies' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCurrencies',
        'languages' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsLanguages',
        'countries' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCountries',
        'payment_methods' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsPaymentMethods',
        'shipping_methods' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsShippingMethods',
        'type' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsType',
        'language' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsLanguage',
        'customer_group' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCustomerGroup',
        'currency' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCurrency',
        'payment_method' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsPaymentMethod',
        'shipping_method' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsShippingMethod',
        'country' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCountry',
        'orders' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsOrders',
        'customers' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCustomers',
        'home_cms_page' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsHomeCmsPage',
        'domains' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsDomains',
        'system_configs' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsSystemConfigs',
        'navigation_category' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsNavigationCategory',
        'footer_category' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsFooterCategory',
        'service_category' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsServiceCategory',
        'product_visibilities' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsProductVisibilities',
        'hreflang_default_domain' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsHreflangDefaultDomain',
        'mail_header_footer' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsMailHeaderFooter',
        'newsletter_recipients' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsNewsletterRecipients',
        'number_range_sales_channels' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsNumberRangeSalesChannels',
        'promotion_sales_channels' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsPromotionSalesChannels',
        'document_base_config_sales_channels' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsDocumentBaseConfigSalesChannels',
        'product_reviews' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsProductReviews',
        'seo_urls' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsSeoUrls',
        'seo_url_templates' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsSeoUrlTemplates',
        'main_categories' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsMainCategories',
        'product_exports' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsProductExports',
        'analytics' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsAnalytics',
        'customer_groups_registrations' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCustomerGroupsRegistrations',
        'landing_pages' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsLandingPages',
        'bound_customers' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsBoundCustomers',
        'wishlists' => '\OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsWishlists'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'currencies' => null,
        'languages' => null,
        'countries' => null,
        'payment_methods' => null,
        'shipping_methods' => null,
        'type' => null,
        'language' => null,
        'customer_group' => null,
        'currency' => null,
        'payment_method' => null,
        'shipping_method' => null,
        'country' => null,
        'orders' => null,
        'customers' => null,
        'home_cms_page' => null,
        'domains' => null,
        'system_configs' => null,
        'navigation_category' => null,
        'footer_category' => null,
        'service_category' => null,
        'product_visibilities' => null,
        'hreflang_default_domain' => null,
        'mail_header_footer' => null,
        'newsletter_recipients' => null,
        'number_range_sales_channels' => null,
        'promotion_sales_channels' => null,
        'document_base_config_sales_channels' => null,
        'product_reviews' => null,
        'seo_urls' => null,
        'seo_url_templates' => null,
        'main_categories' => null,
        'product_exports' => null,
        'analytics' => null,
        'customer_groups_registrations' => null,
        'landing_pages' => null,
        'bound_customers' => null,
        'wishlists' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'currencies' => 'currencies',
        'languages' => 'languages',
        'countries' => 'countries',
        'payment_methods' => 'paymentMethods',
        'shipping_methods' => 'shippingMethods',
        'type' => 'type',
        'language' => 'language',
        'customer_group' => 'customerGroup',
        'currency' => 'currency',
        'payment_method' => 'paymentMethod',
        'shipping_method' => 'shippingMethod',
        'country' => 'country',
        'orders' => 'orders',
        'customers' => 'customers',
        'home_cms_page' => 'homeCmsPage',
        'domains' => 'domains',
        'system_configs' => 'systemConfigs',
        'navigation_category' => 'navigationCategory',
        'footer_category' => 'footerCategory',
        'service_category' => 'serviceCategory',
        'product_visibilities' => 'productVisibilities',
        'hreflang_default_domain' => 'hreflangDefaultDomain',
        'mail_header_footer' => 'mailHeaderFooter',
        'newsletter_recipients' => 'newsletterRecipients',
        'number_range_sales_channels' => 'numberRangeSalesChannels',
        'promotion_sales_channels' => 'promotionSalesChannels',
        'document_base_config_sales_channels' => 'documentBaseConfigSalesChannels',
        'product_reviews' => 'productReviews',
        'seo_urls' => 'seoUrls',
        'seo_url_templates' => 'seoUrlTemplates',
        'main_categories' => 'mainCategories',
        'product_exports' => 'productExports',
        'analytics' => 'analytics',
        'customer_groups_registrations' => 'customerGroupsRegistrations',
        'landing_pages' => 'landingPages',
        'bound_customers' => 'boundCustomers',
        'wishlists' => 'wishlists'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'currencies' => 'setCurrencies',
        'languages' => 'setLanguages',
        'countries' => 'setCountries',
        'payment_methods' => 'setPaymentMethods',
        'shipping_methods' => 'setShippingMethods',
        'type' => 'setType',
        'language' => 'setLanguage',
        'customer_group' => 'setCustomerGroup',
        'currency' => 'setCurrency',
        'payment_method' => 'setPaymentMethod',
        'shipping_method' => 'setShippingMethod',
        'country' => 'setCountry',
        'orders' => 'setOrders',
        'customers' => 'setCustomers',
        'home_cms_page' => 'setHomeCmsPage',
        'domains' => 'setDomains',
        'system_configs' => 'setSystemConfigs',
        'navigation_category' => 'setNavigationCategory',
        'footer_category' => 'setFooterCategory',
        'service_category' => 'setServiceCategory',
        'product_visibilities' => 'setProductVisibilities',
        'hreflang_default_domain' => 'setHreflangDefaultDomain',
        'mail_header_footer' => 'setMailHeaderFooter',
        'newsletter_recipients' => 'setNewsletterRecipients',
        'number_range_sales_channels' => 'setNumberRangeSalesChannels',
        'promotion_sales_channels' => 'setPromotionSalesChannels',
        'document_base_config_sales_channels' => 'setDocumentBaseConfigSalesChannels',
        'product_reviews' => 'setProductReviews',
        'seo_urls' => 'setSeoUrls',
        'seo_url_templates' => 'setSeoUrlTemplates',
        'main_categories' => 'setMainCategories',
        'product_exports' => 'setProductExports',
        'analytics' => 'setAnalytics',
        'customer_groups_registrations' => 'setCustomerGroupsRegistrations',
        'landing_pages' => 'setLandingPages',
        'bound_customers' => 'setBoundCustomers',
        'wishlists' => 'setWishlists'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'currencies' => 'getCurrencies',
        'languages' => 'getLanguages',
        'countries' => 'getCountries',
        'payment_methods' => 'getPaymentMethods',
        'shipping_methods' => 'getShippingMethods',
        'type' => 'getType',
        'language' => 'getLanguage',
        'customer_group' => 'getCustomerGroup',
        'currency' => 'getCurrency',
        'payment_method' => 'getPaymentMethod',
        'shipping_method' => 'getShippingMethod',
        'country' => 'getCountry',
        'orders' => 'getOrders',
        'customers' => 'getCustomers',
        'home_cms_page' => 'getHomeCmsPage',
        'domains' => 'getDomains',
        'system_configs' => 'getSystemConfigs',
        'navigation_category' => 'getNavigationCategory',
        'footer_category' => 'getFooterCategory',
        'service_category' => 'getServiceCategory',
        'product_visibilities' => 'getProductVisibilities',
        'hreflang_default_domain' => 'getHreflangDefaultDomain',
        'mail_header_footer' => 'getMailHeaderFooter',
        'newsletter_recipients' => 'getNewsletterRecipients',
        'number_range_sales_channels' => 'getNumberRangeSalesChannels',
        'promotion_sales_channels' => 'getPromotionSalesChannels',
        'document_base_config_sales_channels' => 'getDocumentBaseConfigSalesChannels',
        'product_reviews' => 'getProductReviews',
        'seo_urls' => 'getSeoUrls',
        'seo_url_templates' => 'getSeoUrlTemplates',
        'main_categories' => 'getMainCategories',
        'product_exports' => 'getProductExports',
        'analytics' => 'getAnalytics',
        'customer_groups_registrations' => 'getCustomerGroupsRegistrations',
        'landing_pages' => 'getLandingPages',
        'bound_customers' => 'getBoundCustomers',
        'wishlists' => 'getWishlists'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['currencies'] = $data['currencies'] ?? null;
        $this->container['languages'] = $data['languages'] ?? null;
        $this->container['countries'] = $data['countries'] ?? null;
        $this->container['payment_methods'] = $data['payment_methods'] ?? null;
        $this->container['shipping_methods'] = $data['shipping_methods'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['language'] = $data['language'] ?? null;
        $this->container['customer_group'] = $data['customer_group'] ?? null;
        $this->container['currency'] = $data['currency'] ?? null;
        $this->container['payment_method'] = $data['payment_method'] ?? null;
        $this->container['shipping_method'] = $data['shipping_method'] ?? null;
        $this->container['country'] = $data['country'] ?? null;
        $this->container['orders'] = $data['orders'] ?? null;
        $this->container['customers'] = $data['customers'] ?? null;
        $this->container['home_cms_page'] = $data['home_cms_page'] ?? null;
        $this->container['domains'] = $data['domains'] ?? null;
        $this->container['system_configs'] = $data['system_configs'] ?? null;
        $this->container['navigation_category'] = $data['navigation_category'] ?? null;
        $this->container['footer_category'] = $data['footer_category'] ?? null;
        $this->container['service_category'] = $data['service_category'] ?? null;
        $this->container['product_visibilities'] = $data['product_visibilities'] ?? null;
        $this->container['hreflang_default_domain'] = $data['hreflang_default_domain'] ?? null;
        $this->container['mail_header_footer'] = $data['mail_header_footer'] ?? null;
        $this->container['newsletter_recipients'] = $data['newsletter_recipients'] ?? null;
        $this->container['number_range_sales_channels'] = $data['number_range_sales_channels'] ?? null;
        $this->container['promotion_sales_channels'] = $data['promotion_sales_channels'] ?? null;
        $this->container['document_base_config_sales_channels'] = $data['document_base_config_sales_channels'] ?? null;
        $this->container['product_reviews'] = $data['product_reviews'] ?? null;
        $this->container['seo_urls'] = $data['seo_urls'] ?? null;
        $this->container['seo_url_templates'] = $data['seo_url_templates'] ?? null;
        $this->container['main_categories'] = $data['main_categories'] ?? null;
        $this->container['product_exports'] = $data['product_exports'] ?? null;
        $this->container['analytics'] = $data['analytics'] ?? null;
        $this->container['customer_groups_registrations'] = $data['customer_groups_registrations'] ?? null;
        $this->container['landing_pages'] = $data['landing_pages'] ?? null;
        $this->container['bound_customers'] = $data['bound_customers'] ?? null;
        $this->container['wishlists'] = $data['wishlists'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets currencies
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCurrencies|null
     */
    public function getCurrencies()
    {
        return $this->container['currencies'];
    }

    /**
     * Sets currencies
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCurrencies|null $currencies currencies
     *
     * @return self
     */
    public function setCurrencies($currencies)
    {
        $this->container['currencies'] = $currencies;

        return $this;
    }

    /**
     * Gets languages
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsLanguages|null
     */
    public function getLanguages()
    {
        return $this->container['languages'];
    }

    /**
     * Sets languages
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsLanguages|null $languages languages
     *
     * @return self
     */
    public function setLanguages($languages)
    {
        $this->container['languages'] = $languages;

        return $this;
    }

    /**
     * Gets countries
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCountries|null
     */
    public function getCountries()
    {
        return $this->container['countries'];
    }

    /**
     * Sets countries
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCountries|null $countries countries
     *
     * @return self
     */
    public function setCountries($countries)
    {
        $this->container['countries'] = $countries;

        return $this;
    }

    /**
     * Gets payment_methods
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsPaymentMethods|null
     */
    public function getPaymentMethods()
    {
        return $this->container['payment_methods'];
    }

    /**
     * Sets payment_methods
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsPaymentMethods|null $payment_methods payment_methods
     *
     * @return self
     */
    public function setPaymentMethods($payment_methods)
    {
        $this->container['payment_methods'] = $payment_methods;

        return $this;
    }

    /**
     * Gets shipping_methods
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsShippingMethods|null
     */
    public function getShippingMethods()
    {
        return $this->container['shipping_methods'];
    }

    /**
     * Sets shipping_methods
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsShippingMethods|null $shipping_methods shipping_methods
     *
     * @return self
     */
    public function setShippingMethods($shipping_methods)
    {
        $this->container['shipping_methods'] = $shipping_methods;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsType|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsType|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets language
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsLanguage|null
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsLanguage|null $language language
     *
     * @return self
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets customer_group
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCustomerGroup|null
     */
    public function getCustomerGroup()
    {
        return $this->container['customer_group'];
    }

    /**
     * Sets customer_group
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCustomerGroup|null $customer_group customer_group
     *
     * @return self
     */
    public function setCustomerGroup($customer_group)
    {
        $this->container['customer_group'] = $customer_group;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCurrency|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCurrency|null $currency currency
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets payment_method
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsPaymentMethod|null
     */
    public function getPaymentMethod()
    {
        return $this->container['payment_method'];
    }

    /**
     * Sets payment_method
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsPaymentMethod|null $payment_method payment_method
     *
     * @return self
     */
    public function setPaymentMethod($payment_method)
    {
        $this->container['payment_method'] = $payment_method;

        return $this;
    }

    /**
     * Gets shipping_method
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsShippingMethod|null
     */
    public function getShippingMethod()
    {
        return $this->container['shipping_method'];
    }

    /**
     * Sets shipping_method
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsShippingMethod|null $shipping_method shipping_method
     *
     * @return self
     */
    public function setShippingMethod($shipping_method)
    {
        $this->container['shipping_method'] = $shipping_method;

        return $this;
    }

    /**
     * Gets country
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCountry|null
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCountry|null $country country
     *
     * @return self
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets orders
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsOrders|null
     */
    public function getOrders()
    {
        return $this->container['orders'];
    }

    /**
     * Sets orders
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsOrders|null $orders orders
     *
     * @return self
     */
    public function setOrders($orders)
    {
        $this->container['orders'] = $orders;

        return $this;
    }

    /**
     * Gets customers
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCustomers|null
     */
    public function getCustomers()
    {
        return $this->container['customers'];
    }

    /**
     * Sets customers
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCustomers|null $customers customers
     *
     * @return self
     */
    public function setCustomers($customers)
    {
        $this->container['customers'] = $customers;

        return $this;
    }

    /**
     * Gets home_cms_page
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsHomeCmsPage|null
     */
    public function getHomeCmsPage()
    {
        return $this->container['home_cms_page'];
    }

    /**
     * Sets home_cms_page
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsHomeCmsPage|null $home_cms_page home_cms_page
     *
     * @return self
     */
    public function setHomeCmsPage($home_cms_page)
    {
        $this->container['home_cms_page'] = $home_cms_page;

        return $this;
    }

    /**
     * Gets domains
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsDomains|null
     */
    public function getDomains()
    {
        return $this->container['domains'];
    }

    /**
     * Sets domains
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsDomains|null $domains domains
     *
     * @return self
     */
    public function setDomains($domains)
    {
        $this->container['domains'] = $domains;

        return $this;
    }

    /**
     * Gets system_configs
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsSystemConfigs|null
     */
    public function getSystemConfigs()
    {
        return $this->container['system_configs'];
    }

    /**
     * Sets system_configs
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsSystemConfigs|null $system_configs system_configs
     *
     * @return self
     */
    public function setSystemConfigs($system_configs)
    {
        $this->container['system_configs'] = $system_configs;

        return $this;
    }

    /**
     * Gets navigation_category
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsNavigationCategory|null
     */
    public function getNavigationCategory()
    {
        return $this->container['navigation_category'];
    }

    /**
     * Sets navigation_category
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsNavigationCategory|null $navigation_category navigation_category
     *
     * @return self
     */
    public function setNavigationCategory($navigation_category)
    {
        $this->container['navigation_category'] = $navigation_category;

        return $this;
    }

    /**
     * Gets footer_category
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsFooterCategory|null
     */
    public function getFooterCategory()
    {
        return $this->container['footer_category'];
    }

    /**
     * Sets footer_category
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsFooterCategory|null $footer_category footer_category
     *
     * @return self
     */
    public function setFooterCategory($footer_category)
    {
        $this->container['footer_category'] = $footer_category;

        return $this;
    }

    /**
     * Gets service_category
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsServiceCategory|null
     */
    public function getServiceCategory()
    {
        return $this->container['service_category'];
    }

    /**
     * Sets service_category
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsServiceCategory|null $service_category service_category
     *
     * @return self
     */
    public function setServiceCategory($service_category)
    {
        $this->container['service_category'] = $service_category;

        return $this;
    }

    /**
     * Gets product_visibilities
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsProductVisibilities|null
     */
    public function getProductVisibilities()
    {
        return $this->container['product_visibilities'];
    }

    /**
     * Sets product_visibilities
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsProductVisibilities|null $product_visibilities product_visibilities
     *
     * @return self
     */
    public function setProductVisibilities($product_visibilities)
    {
        $this->container['product_visibilities'] = $product_visibilities;

        return $this;
    }

    /**
     * Gets hreflang_default_domain
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsHreflangDefaultDomain|null
     */
    public function getHreflangDefaultDomain()
    {
        return $this->container['hreflang_default_domain'];
    }

    /**
     * Sets hreflang_default_domain
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsHreflangDefaultDomain|null $hreflang_default_domain hreflang_default_domain
     *
     * @return self
     */
    public function setHreflangDefaultDomain($hreflang_default_domain)
    {
        $this->container['hreflang_default_domain'] = $hreflang_default_domain;

        return $this;
    }

    /**
     * Gets mail_header_footer
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsMailHeaderFooter|null
     */
    public function getMailHeaderFooter()
    {
        return $this->container['mail_header_footer'];
    }

    /**
     * Sets mail_header_footer
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsMailHeaderFooter|null $mail_header_footer mail_header_footer
     *
     * @return self
     */
    public function setMailHeaderFooter($mail_header_footer)
    {
        $this->container['mail_header_footer'] = $mail_header_footer;

        return $this;
    }

    /**
     * Gets newsletter_recipients
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsNewsletterRecipients|null
     */
    public function getNewsletterRecipients()
    {
        return $this->container['newsletter_recipients'];
    }

    /**
     * Sets newsletter_recipients
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsNewsletterRecipients|null $newsletter_recipients newsletter_recipients
     *
     * @return self
     */
    public function setNewsletterRecipients($newsletter_recipients)
    {
        $this->container['newsletter_recipients'] = $newsletter_recipients;

        return $this;
    }

    /**
     * Gets number_range_sales_channels
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsNumberRangeSalesChannels|null
     */
    public function getNumberRangeSalesChannels()
    {
        return $this->container['number_range_sales_channels'];
    }

    /**
     * Sets number_range_sales_channels
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsNumberRangeSalesChannels|null $number_range_sales_channels number_range_sales_channels
     *
     * @return self
     */
    public function setNumberRangeSalesChannels($number_range_sales_channels)
    {
        $this->container['number_range_sales_channels'] = $number_range_sales_channels;

        return $this;
    }

    /**
     * Gets promotion_sales_channels
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsPromotionSalesChannels|null
     */
    public function getPromotionSalesChannels()
    {
        return $this->container['promotion_sales_channels'];
    }

    /**
     * Sets promotion_sales_channels
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsPromotionSalesChannels|null $promotion_sales_channels promotion_sales_channels
     *
     * @return self
     */
    public function setPromotionSalesChannels($promotion_sales_channels)
    {
        $this->container['promotion_sales_channels'] = $promotion_sales_channels;

        return $this;
    }

    /**
     * Gets document_base_config_sales_channels
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsDocumentBaseConfigSalesChannels|null
     */
    public function getDocumentBaseConfigSalesChannels()
    {
        return $this->container['document_base_config_sales_channels'];
    }

    /**
     * Sets document_base_config_sales_channels
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsDocumentBaseConfigSalesChannels|null $document_base_config_sales_channels document_base_config_sales_channels
     *
     * @return self
     */
    public function setDocumentBaseConfigSalesChannels($document_base_config_sales_channels)
    {
        $this->container['document_base_config_sales_channels'] = $document_base_config_sales_channels;

        return $this;
    }

    /**
     * Gets product_reviews
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsProductReviews|null
     */
    public function getProductReviews()
    {
        return $this->container['product_reviews'];
    }

    /**
     * Sets product_reviews
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsProductReviews|null $product_reviews product_reviews
     *
     * @return self
     */
    public function setProductReviews($product_reviews)
    {
        $this->container['product_reviews'] = $product_reviews;

        return $this;
    }

    /**
     * Gets seo_urls
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsSeoUrls|null
     */
    public function getSeoUrls()
    {
        return $this->container['seo_urls'];
    }

    /**
     * Sets seo_urls
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsSeoUrls|null $seo_urls seo_urls
     *
     * @return self
     */
    public function setSeoUrls($seo_urls)
    {
        $this->container['seo_urls'] = $seo_urls;

        return $this;
    }

    /**
     * Gets seo_url_templates
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsSeoUrlTemplates|null
     */
    public function getSeoUrlTemplates()
    {
        return $this->container['seo_url_templates'];
    }

    /**
     * Sets seo_url_templates
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsSeoUrlTemplates|null $seo_url_templates seo_url_templates
     *
     * @return self
     */
    public function setSeoUrlTemplates($seo_url_templates)
    {
        $this->container['seo_url_templates'] = $seo_url_templates;

        return $this;
    }

    /**
     * Gets main_categories
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsMainCategories|null
     */
    public function getMainCategories()
    {
        return $this->container['main_categories'];
    }

    /**
     * Sets main_categories
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsMainCategories|null $main_categories main_categories
     *
     * @return self
     */
    public function setMainCategories($main_categories)
    {
        $this->container['main_categories'] = $main_categories;

        return $this;
    }

    /**
     * Gets product_exports
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsProductExports|null
     */
    public function getProductExports()
    {
        return $this->container['product_exports'];
    }

    /**
     * Sets product_exports
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsProductExports|null $product_exports product_exports
     *
     * @return self
     */
    public function setProductExports($product_exports)
    {
        $this->container['product_exports'] = $product_exports;

        return $this;
    }

    /**
     * Gets analytics
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsAnalytics|null
     */
    public function getAnalytics()
    {
        return $this->container['analytics'];
    }

    /**
     * Sets analytics
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsAnalytics|null $analytics analytics
     *
     * @return self
     */
    public function setAnalytics($analytics)
    {
        $this->container['analytics'] = $analytics;

        return $this;
    }

    /**
     * Gets customer_groups_registrations
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCustomerGroupsRegistrations|null
     */
    public function getCustomerGroupsRegistrations()
    {
        return $this->container['customer_groups_registrations'];
    }

    /**
     * Sets customer_groups_registrations
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsCustomerGroupsRegistrations|null $customer_groups_registrations customer_groups_registrations
     *
     * @return self
     */
    public function setCustomerGroupsRegistrations($customer_groups_registrations)
    {
        $this->container['customer_groups_registrations'] = $customer_groups_registrations;

        return $this;
    }

    /**
     * Gets landing_pages
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsLandingPages|null
     */
    public function getLandingPages()
    {
        return $this->container['landing_pages'];
    }

    /**
     * Sets landing_pages
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsLandingPages|null $landing_pages landing_pages
     *
     * @return self
     */
    public function setLandingPages($landing_pages)
    {
        $this->container['landing_pages'] = $landing_pages;

        return $this;
    }

    /**
     * Gets bound_customers
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsBoundCustomers|null
     */
    public function getBoundCustomers()
    {
        return $this->container['bound_customers'];
    }

    /**
     * Sets bound_customers
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsBoundCustomers|null $bound_customers bound_customers
     *
     * @return self
     */
    public function setBoundCustomers($bound_customers)
    {
        $this->container['bound_customers'] = $bound_customers;

        return $this;
    }

    /**
     * Gets wishlists
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsWishlists|null
     */
    public function getWishlists()
    {
        return $this->container['wishlists'];
    }

    /**
     * Sets wishlists
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\SalesChannelJsonApiAllOfRelationshipsWishlists|null $wishlists wishlists
     *
     * @return self
     */
    public function setWishlists($wishlists)
    {
        $this->container['wishlists'] = $wishlists;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


