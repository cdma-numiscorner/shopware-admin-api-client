<?php
/**
 * ProductJsonApi
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * The version of the OpenAPI document: 6.5.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\ShopwareAdminApiClient\Model;

use \ArrayAccess;
use \OpenAPI\ShopwareAdminApiClient\ObjectSerializer;

/**
 * ProductJsonApi Class Doc Comment
 *
 * @category Class
 * @description Added since version: 6.0.0.0
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ProductJsonApi implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ProductJsonApi';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'type' => 'string',
        'id' => 'string',
        'attributes' => 'map[string,object]',
        'relationships' => '\OpenAPI\ShopwareAdminApiClient\Model\ProductJsonApiAllOfRelationships',
        'links' => 'map[string,\OpenAPI\ShopwareAdminApiClient\Model\Link]',
        'meta' => 'map[string,object]',
        'version_id' => 'string',
        'parent_id' => 'string',
        'parent_version_id' => 'string',
        'manufacturer_id' => 'string',
        'product_manufacturer_version_id' => 'string',
        'unit_id' => 'string',
        'tax_id' => 'string',
        'cover_id' => 'string',
        'product_media_version_id' => 'string',
        'delivery_time_id' => 'string',
        'feature_set_id' => 'string',
        'canonical_product_id' => 'string',
        'cms_page_id' => 'string',
        'cms_page_version_id' => 'string',
        'price' => 'object',
        'product_number' => 'string',
        'restock_time' => 'int',
        'auto_increment' => 'int',
        'active' => 'bool',
        'available' => 'bool',
        'is_closeout' => 'bool',
        'variation' => 'string[]',
        'display_group' => 'string',
        'variant_listing_config' => 'object',
        'variant_restrictions' => 'object',
        'manufacturer_number' => 'string',
        'ean' => 'string',
        'purchase_steps' => 'int',
        'max_purchase' => 'int',
        'min_purchase' => 'int',
        'purchase_unit' => 'float',
        'reference_unit' => 'float',
        'shipping_free' => 'bool',
        'purchase_prices' => 'object',
        'mark_as_topseller' => 'bool',
        'weight' => 'float',
        'width' => 'float',
        'height' => 'float',
        'length' => 'float',
        'release_date' => '\DateTime',
        'rating_average' => 'float',
        'category_tree' => 'string[]',
        'property_ids' => 'string[]',
        'option_ids' => 'string[]',
        'stream_ids' => 'string[]',
        'tag_ids' => 'string[]',
        'category_ids' => 'string[]',
        'child_count' => 'int',
        'custom_field_set_selection_active' => 'bool',
        'sales' => 'int',
        'states' => 'string[]',
        'meta_description' => 'string',
        'name' => 'string',
        'keywords' => 'string',
        'description' => 'string',
        'meta_title' => 'string',
        'pack_unit' => 'string',
        'pack_unit_plural' => 'string',
        'custom_fields' => 'object',
        'slot_config' => 'object',
        'custom_search_keywords' => 'object[]',
        'available_stock' => 'int',
        'stock' => 'int',
        'created_at' => '\DateTime',
        'updated_at' => '\DateTime',
        'translated' => 'object'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'type' => null,
        'id' => null,
        'attributes' => null,
        'relationships' => null,
        'links' => null,
        'meta' => null,
        'version_id' => null,
        'parent_id' => null,
        'parent_version_id' => null,
        'manufacturer_id' => null,
        'product_manufacturer_version_id' => null,
        'unit_id' => null,
        'tax_id' => null,
        'cover_id' => null,
        'product_media_version_id' => null,
        'delivery_time_id' => null,
        'feature_set_id' => null,
        'canonical_product_id' => null,
        'cms_page_id' => null,
        'cms_page_version_id' => null,
        'price' => null,
        'product_number' => null,
        'restock_time' => 'int64',
        'auto_increment' => 'int64',
        'active' => null,
        'available' => null,
        'is_closeout' => null,
        'variation' => null,
        'display_group' => null,
        'variant_listing_config' => null,
        'variant_restrictions' => null,
        'manufacturer_number' => null,
        'ean' => null,
        'purchase_steps' => 'int64',
        'max_purchase' => 'int64',
        'min_purchase' => 'int64',
        'purchase_unit' => 'float',
        'reference_unit' => 'float',
        'shipping_free' => null,
        'purchase_prices' => null,
        'mark_as_topseller' => null,
        'weight' => 'float',
        'width' => 'float',
        'height' => 'float',
        'length' => 'float',
        'release_date' => 'date-time',
        'rating_average' => 'float',
        'category_tree' => null,
        'property_ids' => null,
        'option_ids' => null,
        'stream_ids' => null,
        'tag_ids' => null,
        'category_ids' => null,
        'child_count' => 'int64',
        'custom_field_set_selection_active' => null,
        'sales' => 'int64',
        'states' => null,
        'meta_description' => null,
        'name' => null,
        'keywords' => null,
        'description' => null,
        'meta_title' => null,
        'pack_unit' => null,
        'pack_unit_plural' => null,
        'custom_fields' => null,
        'slot_config' => null,
        'custom_search_keywords' => null,
        'available_stock' => 'int64',
        'stock' => 'int64',
        'created_at' => 'date-time',
        'updated_at' => 'date-time',
        'translated' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'type' => 'type',
        'id' => 'id',
        'attributes' => 'attributes',
        'relationships' => 'relationships',
        'links' => 'links',
        'meta' => 'meta',
        'version_id' => 'versionId',
        'parent_id' => 'parentId',
        'parent_version_id' => 'parentVersionId',
        'manufacturer_id' => 'manufacturerId',
        'product_manufacturer_version_id' => 'productManufacturerVersionId',
        'unit_id' => 'unitId',
        'tax_id' => 'taxId',
        'cover_id' => 'coverId',
        'product_media_version_id' => 'productMediaVersionId',
        'delivery_time_id' => 'deliveryTimeId',
        'feature_set_id' => 'featureSetId',
        'canonical_product_id' => 'canonicalProductId',
        'cms_page_id' => 'cmsPageId',
        'cms_page_version_id' => 'cmsPageVersionId',
        'price' => 'price',
        'product_number' => 'productNumber',
        'restock_time' => 'restockTime',
        'auto_increment' => 'autoIncrement',
        'active' => 'active',
        'available' => 'available',
        'is_closeout' => 'isCloseout',
        'variation' => 'variation',
        'display_group' => 'displayGroup',
        'variant_listing_config' => 'variantListingConfig',
        'variant_restrictions' => 'variantRestrictions',
        'manufacturer_number' => 'manufacturerNumber',
        'ean' => 'ean',
        'purchase_steps' => 'purchaseSteps',
        'max_purchase' => 'maxPurchase',
        'min_purchase' => 'minPurchase',
        'purchase_unit' => 'purchaseUnit',
        'reference_unit' => 'referenceUnit',
        'shipping_free' => 'shippingFree',
        'purchase_prices' => 'purchasePrices',
        'mark_as_topseller' => 'markAsTopseller',
        'weight' => 'weight',
        'width' => 'width',
        'height' => 'height',
        'length' => 'length',
        'release_date' => 'releaseDate',
        'rating_average' => 'ratingAverage',
        'category_tree' => 'categoryTree',
        'property_ids' => 'propertyIds',
        'option_ids' => 'optionIds',
        'stream_ids' => 'streamIds',
        'tag_ids' => 'tagIds',
        'category_ids' => 'categoryIds',
        'child_count' => 'childCount',
        'custom_field_set_selection_active' => 'customFieldSetSelectionActive',
        'sales' => 'sales',
        'states' => 'states',
        'meta_description' => 'metaDescription',
        'name' => 'name',
        'keywords' => 'keywords',
        'description' => 'description',
        'meta_title' => 'metaTitle',
        'pack_unit' => 'packUnit',
        'pack_unit_plural' => 'packUnitPlural',
        'custom_fields' => 'customFields',
        'slot_config' => 'slotConfig',
        'custom_search_keywords' => 'customSearchKeywords',
        'available_stock' => 'availableStock',
        'stock' => 'stock',
        'created_at' => 'createdAt',
        'updated_at' => 'updatedAt',
        'translated' => 'translated'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'type' => 'setType',
        'id' => 'setId',
        'attributes' => 'setAttributes',
        'relationships' => 'setRelationships',
        'links' => 'setLinks',
        'meta' => 'setMeta',
        'version_id' => 'setVersionId',
        'parent_id' => 'setParentId',
        'parent_version_id' => 'setParentVersionId',
        'manufacturer_id' => 'setManufacturerId',
        'product_manufacturer_version_id' => 'setProductManufacturerVersionId',
        'unit_id' => 'setUnitId',
        'tax_id' => 'setTaxId',
        'cover_id' => 'setCoverId',
        'product_media_version_id' => 'setProductMediaVersionId',
        'delivery_time_id' => 'setDeliveryTimeId',
        'feature_set_id' => 'setFeatureSetId',
        'canonical_product_id' => 'setCanonicalProductId',
        'cms_page_id' => 'setCmsPageId',
        'cms_page_version_id' => 'setCmsPageVersionId',
        'price' => 'setPrice',
        'product_number' => 'setProductNumber',
        'restock_time' => 'setRestockTime',
        'auto_increment' => 'setAutoIncrement',
        'active' => 'setActive',
        'available' => 'setAvailable',
        'is_closeout' => 'setIsCloseout',
        'variation' => 'setVariation',
        'display_group' => 'setDisplayGroup',
        'variant_listing_config' => 'setVariantListingConfig',
        'variant_restrictions' => 'setVariantRestrictions',
        'manufacturer_number' => 'setManufacturerNumber',
        'ean' => 'setEan',
        'purchase_steps' => 'setPurchaseSteps',
        'max_purchase' => 'setMaxPurchase',
        'min_purchase' => 'setMinPurchase',
        'purchase_unit' => 'setPurchaseUnit',
        'reference_unit' => 'setReferenceUnit',
        'shipping_free' => 'setShippingFree',
        'purchase_prices' => 'setPurchasePrices',
        'mark_as_topseller' => 'setMarkAsTopseller',
        'weight' => 'setWeight',
        'width' => 'setWidth',
        'height' => 'setHeight',
        'length' => 'setLength',
        'release_date' => 'setReleaseDate',
        'rating_average' => 'setRatingAverage',
        'category_tree' => 'setCategoryTree',
        'property_ids' => 'setPropertyIds',
        'option_ids' => 'setOptionIds',
        'stream_ids' => 'setStreamIds',
        'tag_ids' => 'setTagIds',
        'category_ids' => 'setCategoryIds',
        'child_count' => 'setChildCount',
        'custom_field_set_selection_active' => 'setCustomFieldSetSelectionActive',
        'sales' => 'setSales',
        'states' => 'setStates',
        'meta_description' => 'setMetaDescription',
        'name' => 'setName',
        'keywords' => 'setKeywords',
        'description' => 'setDescription',
        'meta_title' => 'setMetaTitle',
        'pack_unit' => 'setPackUnit',
        'pack_unit_plural' => 'setPackUnitPlural',
        'custom_fields' => 'setCustomFields',
        'slot_config' => 'setSlotConfig',
        'custom_search_keywords' => 'setCustomSearchKeywords',
        'available_stock' => 'setAvailableStock',
        'stock' => 'setStock',
        'created_at' => 'setCreatedAt',
        'updated_at' => 'setUpdatedAt',
        'translated' => 'setTranslated'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'type' => 'getType',
        'id' => 'getId',
        'attributes' => 'getAttributes',
        'relationships' => 'getRelationships',
        'links' => 'getLinks',
        'meta' => 'getMeta',
        'version_id' => 'getVersionId',
        'parent_id' => 'getParentId',
        'parent_version_id' => 'getParentVersionId',
        'manufacturer_id' => 'getManufacturerId',
        'product_manufacturer_version_id' => 'getProductManufacturerVersionId',
        'unit_id' => 'getUnitId',
        'tax_id' => 'getTaxId',
        'cover_id' => 'getCoverId',
        'product_media_version_id' => 'getProductMediaVersionId',
        'delivery_time_id' => 'getDeliveryTimeId',
        'feature_set_id' => 'getFeatureSetId',
        'canonical_product_id' => 'getCanonicalProductId',
        'cms_page_id' => 'getCmsPageId',
        'cms_page_version_id' => 'getCmsPageVersionId',
        'price' => 'getPrice',
        'product_number' => 'getProductNumber',
        'restock_time' => 'getRestockTime',
        'auto_increment' => 'getAutoIncrement',
        'active' => 'getActive',
        'available' => 'getAvailable',
        'is_closeout' => 'getIsCloseout',
        'variation' => 'getVariation',
        'display_group' => 'getDisplayGroup',
        'variant_listing_config' => 'getVariantListingConfig',
        'variant_restrictions' => 'getVariantRestrictions',
        'manufacturer_number' => 'getManufacturerNumber',
        'ean' => 'getEan',
        'purchase_steps' => 'getPurchaseSteps',
        'max_purchase' => 'getMaxPurchase',
        'min_purchase' => 'getMinPurchase',
        'purchase_unit' => 'getPurchaseUnit',
        'reference_unit' => 'getReferenceUnit',
        'shipping_free' => 'getShippingFree',
        'purchase_prices' => 'getPurchasePrices',
        'mark_as_topseller' => 'getMarkAsTopseller',
        'weight' => 'getWeight',
        'width' => 'getWidth',
        'height' => 'getHeight',
        'length' => 'getLength',
        'release_date' => 'getReleaseDate',
        'rating_average' => 'getRatingAverage',
        'category_tree' => 'getCategoryTree',
        'property_ids' => 'getPropertyIds',
        'option_ids' => 'getOptionIds',
        'stream_ids' => 'getStreamIds',
        'tag_ids' => 'getTagIds',
        'category_ids' => 'getCategoryIds',
        'child_count' => 'getChildCount',
        'custom_field_set_selection_active' => 'getCustomFieldSetSelectionActive',
        'sales' => 'getSales',
        'states' => 'getStates',
        'meta_description' => 'getMetaDescription',
        'name' => 'getName',
        'keywords' => 'getKeywords',
        'description' => 'getDescription',
        'meta_title' => 'getMetaTitle',
        'pack_unit' => 'getPackUnit',
        'pack_unit_plural' => 'getPackUnitPlural',
        'custom_fields' => 'getCustomFields',
        'slot_config' => 'getSlotConfig',
        'custom_search_keywords' => 'getCustomSearchKeywords',
        'available_stock' => 'getAvailableStock',
        'stock' => 'getStock',
        'created_at' => 'getCreatedAt',
        'updated_at' => 'getUpdatedAt',
        'translated' => 'getTranslated'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['type'] = $data['type'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['attributes'] = $data['attributes'] ?? null;
        $this->container['relationships'] = $data['relationships'] ?? null;
        $this->container['links'] = $data['links'] ?? null;
        $this->container['meta'] = $data['meta'] ?? null;
        $this->container['version_id'] = $data['version_id'] ?? null;
        $this->container['parent_id'] = $data['parent_id'] ?? null;
        $this->container['parent_version_id'] = $data['parent_version_id'] ?? null;
        $this->container['manufacturer_id'] = $data['manufacturer_id'] ?? null;
        $this->container['product_manufacturer_version_id'] = $data['product_manufacturer_version_id'] ?? null;
        $this->container['unit_id'] = $data['unit_id'] ?? null;
        $this->container['tax_id'] = $data['tax_id'] ?? null;
        $this->container['cover_id'] = $data['cover_id'] ?? null;
        $this->container['product_media_version_id'] = $data['product_media_version_id'] ?? null;
        $this->container['delivery_time_id'] = $data['delivery_time_id'] ?? null;
        $this->container['feature_set_id'] = $data['feature_set_id'] ?? null;
        $this->container['canonical_product_id'] = $data['canonical_product_id'] ?? null;
        $this->container['cms_page_id'] = $data['cms_page_id'] ?? null;
        $this->container['cms_page_version_id'] = $data['cms_page_version_id'] ?? null;
        $this->container['price'] = $data['price'] ?? null;
        $this->container['product_number'] = $data['product_number'] ?? null;
        $this->container['restock_time'] = $data['restock_time'] ?? null;
        $this->container['auto_increment'] = $data['auto_increment'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['available'] = $data['available'] ?? null;
        $this->container['is_closeout'] = $data['is_closeout'] ?? null;
        $this->container['variation'] = $data['variation'] ?? null;
        $this->container['display_group'] = $data['display_group'] ?? null;
        $this->container['variant_listing_config'] = $data['variant_listing_config'] ?? null;
        $this->container['variant_restrictions'] = $data['variant_restrictions'] ?? null;
        $this->container['manufacturer_number'] = $data['manufacturer_number'] ?? null;
        $this->container['ean'] = $data['ean'] ?? null;
        $this->container['purchase_steps'] = $data['purchase_steps'] ?? null;
        $this->container['max_purchase'] = $data['max_purchase'] ?? null;
        $this->container['min_purchase'] = $data['min_purchase'] ?? null;
        $this->container['purchase_unit'] = $data['purchase_unit'] ?? null;
        $this->container['reference_unit'] = $data['reference_unit'] ?? null;
        $this->container['shipping_free'] = $data['shipping_free'] ?? null;
        $this->container['purchase_prices'] = $data['purchase_prices'] ?? null;
        $this->container['mark_as_topseller'] = $data['mark_as_topseller'] ?? null;
        $this->container['weight'] = $data['weight'] ?? null;
        $this->container['width'] = $data['width'] ?? null;
        $this->container['height'] = $data['height'] ?? null;
        $this->container['length'] = $data['length'] ?? null;
        $this->container['release_date'] = $data['release_date'] ?? null;
        $this->container['rating_average'] = $data['rating_average'] ?? null;
        $this->container['category_tree'] = $data['category_tree'] ?? null;
        $this->container['property_ids'] = $data['property_ids'] ?? null;
        $this->container['option_ids'] = $data['option_ids'] ?? null;
        $this->container['stream_ids'] = $data['stream_ids'] ?? null;
        $this->container['tag_ids'] = $data['tag_ids'] ?? null;
        $this->container['category_ids'] = $data['category_ids'] ?? null;
        $this->container['child_count'] = $data['child_count'] ?? null;
        $this->container['custom_field_set_selection_active'] = $data['custom_field_set_selection_active'] ?? null;
        $this->container['sales'] = $data['sales'] ?? null;
        $this->container['states'] = $data['states'] ?? null;
        $this->container['meta_description'] = $data['meta_description'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['keywords'] = $data['keywords'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['meta_title'] = $data['meta_title'] ?? null;
        $this->container['pack_unit'] = $data['pack_unit'] ?? null;
        $this->container['pack_unit_plural'] = $data['pack_unit_plural'] ?? null;
        $this->container['custom_fields'] = $data['custom_fields'] ?? null;
        $this->container['slot_config'] = $data['slot_config'] ?? null;
        $this->container['custom_search_keywords'] = $data['custom_search_keywords'] ?? null;
        $this->container['available_stock'] = $data['available_stock'] ?? null;
        $this->container['stock'] = $data['stock'] ?? null;
        $this->container['created_at'] = $data['created_at'] ?? null;
        $this->container['updated_at'] = $data['updated_at'] ?? null;
        $this->container['translated'] = $data['translated'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['id'])) {
            $invalidProperties[] = "invalid value for 'id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['version_id'])) {
            $invalidProperties[] = "invalid value for 'version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['parent_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['parent_id'])) {
            $invalidProperties[] = "invalid value for 'parent_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['parent_version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['parent_version_id'])) {
            $invalidProperties[] = "invalid value for 'parent_version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['manufacturer_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['manufacturer_id'])) {
            $invalidProperties[] = "invalid value for 'manufacturer_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['product_manufacturer_version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['product_manufacturer_version_id'])) {
            $invalidProperties[] = "invalid value for 'product_manufacturer_version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['unit_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['unit_id'])) {
            $invalidProperties[] = "invalid value for 'unit_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['tax_id'] === null) {
            $invalidProperties[] = "'tax_id' can't be null";
        }
        if (!preg_match("/^[0-9a-f]{32}$/", $this->container['tax_id'])) {
            $invalidProperties[] = "invalid value for 'tax_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['cover_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['cover_id'])) {
            $invalidProperties[] = "invalid value for 'cover_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['product_media_version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['product_media_version_id'])) {
            $invalidProperties[] = "invalid value for 'product_media_version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['delivery_time_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['delivery_time_id'])) {
            $invalidProperties[] = "invalid value for 'delivery_time_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['feature_set_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['feature_set_id'])) {
            $invalidProperties[] = "invalid value for 'feature_set_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['canonical_product_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['canonical_product_id'])) {
            $invalidProperties[] = "invalid value for 'canonical_product_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['cms_page_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['cms_page_id'])) {
            $invalidProperties[] = "invalid value for 'cms_page_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if (!is_null($this->container['cms_page_version_id']) && !preg_match("/^[0-9a-f]{32}$/", $this->container['cms_page_version_id'])) {
            $invalidProperties[] = "invalid value for 'cms_page_version_id', must be conform to the pattern /^[0-9a-f]{32}$/.";
        }

        if ($this->container['price'] === null) {
            $invalidProperties[] = "'price' can't be null";
        }
        if ($this->container['product_number'] === null) {
            $invalidProperties[] = "'product_number' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['stock'] === null) {
            $invalidProperties[] = "'stock' can't be null";
        }
        if ($this->container['created_at'] === null) {
            $invalidProperties[] = "'created_at' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return self
     */
    public function setId($id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $id))) {
            throw new \InvalidArgumentException("invalid value for $id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets attributes
     *
     * @return map[string,object]|null
     */
    public function getAttributes()
    {
        return $this->container['attributes'];
    }

    /**
     * Sets attributes
     *
     * @param map[string,object]|null $attributes Members of the attributes object (\"attributes\") represent information about the resource object in which it's defined.
     *
     * @return self
     */
    public function setAttributes($attributes)
    {
        $this->container['attributes'] = $attributes;

        return $this;
    }

    /**
     * Gets relationships
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\ProductJsonApiAllOfRelationships|null
     */
    public function getRelationships()
    {
        return $this->container['relationships'];
    }

    /**
     * Sets relationships
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\ProductJsonApiAllOfRelationships|null $relationships relationships
     *
     * @return self
     */
    public function setRelationships($relationships)
    {
        $this->container['relationships'] = $relationships;

        return $this;
    }

    /**
     * Gets links
     *
     * @return map[string,\OpenAPI\ShopwareAdminApiClient\Model\Link]|null
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     *
     * @param map[string,\OpenAPI\ShopwareAdminApiClient\Model\Link]|null $links links
     *
     * @return self
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }

    /**
     * Gets meta
     *
     * @return map[string,object]|null
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param map[string,object]|null $meta Non-standard meta-information that can not be represented as an attribute or relationship.
     *
     * @return self
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }

    /**
     * Gets version_id
     *
     * @return string|null
     */
    public function getVersionId()
    {
        return $this->container['version_id'];
    }

    /**
     * Sets version_id
     *
     * @param string|null $version_id version_id
     *
     * @return self
     */
    public function setVersionId($version_id)
    {

        if (!is_null($version_id) && (!preg_match("/^[0-9a-f]{32}$/", $version_id))) {
            throw new \InvalidArgumentException("invalid value for $version_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['version_id'] = $version_id;

        return $this;
    }

    /**
     * Gets parent_id
     *
     * @return string|null
     */
    public function getParentId()
    {
        return $this->container['parent_id'];
    }

    /**
     * Sets parent_id
     *
     * @param string|null $parent_id parent_id
     *
     * @return self
     */
    public function setParentId($parent_id)
    {

        if (!is_null($parent_id) && (!preg_match("/^[0-9a-f]{32}$/", $parent_id))) {
            throw new \InvalidArgumentException("invalid value for $parent_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['parent_id'] = $parent_id;

        return $this;
    }

    /**
     * Gets parent_version_id
     *
     * @return string|null
     */
    public function getParentVersionId()
    {
        return $this->container['parent_version_id'];
    }

    /**
     * Sets parent_version_id
     *
     * @param string|null $parent_version_id parent_version_id
     *
     * @return self
     */
    public function setParentVersionId($parent_version_id)
    {

        if (!is_null($parent_version_id) && (!preg_match("/^[0-9a-f]{32}$/", $parent_version_id))) {
            throw new \InvalidArgumentException("invalid value for $parent_version_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['parent_version_id'] = $parent_version_id;

        return $this;
    }

    /**
     * Gets manufacturer_id
     *
     * @return string|null
     */
    public function getManufacturerId()
    {
        return $this->container['manufacturer_id'];
    }

    /**
     * Sets manufacturer_id
     *
     * @param string|null $manufacturer_id manufacturer_id
     *
     * @return self
     */
    public function setManufacturerId($manufacturer_id)
    {

        if (!is_null($manufacturer_id) && (!preg_match("/^[0-9a-f]{32}$/", $manufacturer_id))) {
            throw new \InvalidArgumentException("invalid value for $manufacturer_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['manufacturer_id'] = $manufacturer_id;

        return $this;
    }

    /**
     * Gets product_manufacturer_version_id
     *
     * @return string|null
     */
    public function getProductManufacturerVersionId()
    {
        return $this->container['product_manufacturer_version_id'];
    }

    /**
     * Sets product_manufacturer_version_id
     *
     * @param string|null $product_manufacturer_version_id product_manufacturer_version_id
     *
     * @return self
     */
    public function setProductManufacturerVersionId($product_manufacturer_version_id)
    {

        if (!is_null($product_manufacturer_version_id) && (!preg_match("/^[0-9a-f]{32}$/", $product_manufacturer_version_id))) {
            throw new \InvalidArgumentException("invalid value for $product_manufacturer_version_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['product_manufacturer_version_id'] = $product_manufacturer_version_id;

        return $this;
    }

    /**
     * Gets unit_id
     *
     * @return string|null
     */
    public function getUnitId()
    {
        return $this->container['unit_id'];
    }

    /**
     * Sets unit_id
     *
     * @param string|null $unit_id unit_id
     *
     * @return self
     */
    public function setUnitId($unit_id)
    {

        if (!is_null($unit_id) && (!preg_match("/^[0-9a-f]{32}$/", $unit_id))) {
            throw new \InvalidArgumentException("invalid value for $unit_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['unit_id'] = $unit_id;

        return $this;
    }

    /**
     * Gets tax_id
     *
     * @return string
     */
    public function getTaxId()
    {
        return $this->container['tax_id'];
    }

    /**
     * Sets tax_id
     *
     * @param string $tax_id tax_id
     *
     * @return self
     */
    public function setTaxId($tax_id)
    {

        if ((!preg_match("/^[0-9a-f]{32}$/", $tax_id))) {
            throw new \InvalidArgumentException("invalid value for $tax_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['tax_id'] = $tax_id;

        return $this;
    }

    /**
     * Gets cover_id
     *
     * @return string|null
     */
    public function getCoverId()
    {
        return $this->container['cover_id'];
    }

    /**
     * Sets cover_id
     *
     * @param string|null $cover_id cover_id
     *
     * @return self
     */
    public function setCoverId($cover_id)
    {

        if (!is_null($cover_id) && (!preg_match("/^[0-9a-f]{32}$/", $cover_id))) {
            throw new \InvalidArgumentException("invalid value for $cover_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['cover_id'] = $cover_id;

        return $this;
    }

    /**
     * Gets product_media_version_id
     *
     * @return string|null
     */
    public function getProductMediaVersionId()
    {
        return $this->container['product_media_version_id'];
    }

    /**
     * Sets product_media_version_id
     *
     * @param string|null $product_media_version_id product_media_version_id
     *
     * @return self
     */
    public function setProductMediaVersionId($product_media_version_id)
    {

        if (!is_null($product_media_version_id) && (!preg_match("/^[0-9a-f]{32}$/", $product_media_version_id))) {
            throw new \InvalidArgumentException("invalid value for $product_media_version_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['product_media_version_id'] = $product_media_version_id;

        return $this;
    }

    /**
     * Gets delivery_time_id
     *
     * @return string|null
     */
    public function getDeliveryTimeId()
    {
        return $this->container['delivery_time_id'];
    }

    /**
     * Sets delivery_time_id
     *
     * @param string|null $delivery_time_id delivery_time_id
     *
     * @return self
     */
    public function setDeliveryTimeId($delivery_time_id)
    {

        if (!is_null($delivery_time_id) && (!preg_match("/^[0-9a-f]{32}$/", $delivery_time_id))) {
            throw new \InvalidArgumentException("invalid value for $delivery_time_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['delivery_time_id'] = $delivery_time_id;

        return $this;
    }

    /**
     * Gets feature_set_id
     *
     * @return string|null
     */
    public function getFeatureSetId()
    {
        return $this->container['feature_set_id'];
    }

    /**
     * Sets feature_set_id
     *
     * @param string|null $feature_set_id feature_set_id
     *
     * @return self
     */
    public function setFeatureSetId($feature_set_id)
    {

        if (!is_null($feature_set_id) && (!preg_match("/^[0-9a-f]{32}$/", $feature_set_id))) {
            throw new \InvalidArgumentException("invalid value for $feature_set_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['feature_set_id'] = $feature_set_id;

        return $this;
    }

    /**
     * Gets canonical_product_id
     *
     * @return string|null
     */
    public function getCanonicalProductId()
    {
        return $this->container['canonical_product_id'];
    }

    /**
     * Sets canonical_product_id
     *
     * @param string|null $canonical_product_id canonical_product_id
     *
     * @return self
     */
    public function setCanonicalProductId($canonical_product_id)
    {

        if (!is_null($canonical_product_id) && (!preg_match("/^[0-9a-f]{32}$/", $canonical_product_id))) {
            throw new \InvalidArgumentException("invalid value for $canonical_product_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['canonical_product_id'] = $canonical_product_id;

        return $this;
    }

    /**
     * Gets cms_page_id
     *
     * @return string|null
     */
    public function getCmsPageId()
    {
        return $this->container['cms_page_id'];
    }

    /**
     * Sets cms_page_id
     *
     * @param string|null $cms_page_id cms_page_id
     *
     * @return self
     */
    public function setCmsPageId($cms_page_id)
    {

        if (!is_null($cms_page_id) && (!preg_match("/^[0-9a-f]{32}$/", $cms_page_id))) {
            throw new \InvalidArgumentException("invalid value for $cms_page_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['cms_page_id'] = $cms_page_id;

        return $this;
    }

    /**
     * Gets cms_page_version_id
     *
     * @return string|null
     */
    public function getCmsPageVersionId()
    {
        return $this->container['cms_page_version_id'];
    }

    /**
     * Sets cms_page_version_id
     *
     * @param string|null $cms_page_version_id cms_page_version_id
     *
     * @return self
     */
    public function setCmsPageVersionId($cms_page_version_id)
    {

        if (!is_null($cms_page_version_id) && (!preg_match("/^[0-9a-f]{32}$/", $cms_page_version_id))) {
            throw new \InvalidArgumentException("invalid value for $cms_page_version_id when calling ProductJsonApi., must conform to the pattern /^[0-9a-f]{32}$/.");
        }

        $this->container['cms_page_version_id'] = $cms_page_version_id;

        return $this;
    }

    /**
     * Gets price
     *
     * @return object
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param object $price price
     *
     * @return self
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets product_number
     *
     * @return string
     */
    public function getProductNumber()
    {
        return $this->container['product_number'];
    }

    /**
     * Sets product_number
     *
     * @param string $product_number product_number
     *
     * @return self
     */
    public function setProductNumber($product_number)
    {
        $this->container['product_number'] = $product_number;

        return $this;
    }

    /**
     * Gets restock_time
     *
     * @return int|null
     */
    public function getRestockTime()
    {
        return $this->container['restock_time'];
    }

    /**
     * Sets restock_time
     *
     * @param int|null $restock_time restock_time
     *
     * @return self
     */
    public function setRestockTime($restock_time)
    {
        $this->container['restock_time'] = $restock_time;

        return $this;
    }

    /**
     * Gets auto_increment
     *
     * @return int|null
     */
    public function getAutoIncrement()
    {
        return $this->container['auto_increment'];
    }

    /**
     * Sets auto_increment
     *
     * @param int|null $auto_increment auto_increment
     *
     * @return self
     */
    public function setAutoIncrement($auto_increment)
    {
        $this->container['auto_increment'] = $auto_increment;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool|null $active active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets available
     *
     * @return bool|null
     */
    public function getAvailable()
    {
        return $this->container['available'];
    }

    /**
     * Sets available
     *
     * @param bool|null $available available
     *
     * @return self
     */
    public function setAvailable($available)
    {
        $this->container['available'] = $available;

        return $this;
    }

    /**
     * Gets is_closeout
     *
     * @return bool|null
     */
    public function getIsCloseout()
    {
        return $this->container['is_closeout'];
    }

    /**
     * Sets is_closeout
     *
     * @param bool|null $is_closeout is_closeout
     *
     * @return self
     */
    public function setIsCloseout($is_closeout)
    {
        $this->container['is_closeout'] = $is_closeout;

        return $this;
    }

    /**
     * Gets variation
     *
     * @return string[]|null
     */
    public function getVariation()
    {
        return $this->container['variation'];
    }

    /**
     * Sets variation
     *
     * @param string[]|null $variation variation
     *
     * @return self
     */
    public function setVariation($variation)
    {
        $this->container['variation'] = $variation;

        return $this;
    }

    /**
     * Gets display_group
     *
     * @return string|null
     */
    public function getDisplayGroup()
    {
        return $this->container['display_group'];
    }

    /**
     * Sets display_group
     *
     * @param string|null $display_group display_group
     *
     * @return self
     */
    public function setDisplayGroup($display_group)
    {
        $this->container['display_group'] = $display_group;

        return $this;
    }

    /**
     * Gets variant_listing_config
     *
     * @return object|null
     */
    public function getVariantListingConfig()
    {
        return $this->container['variant_listing_config'];
    }

    /**
     * Sets variant_listing_config
     *
     * @param object|null $variant_listing_config variant_listing_config
     *
     * @return self
     */
    public function setVariantListingConfig($variant_listing_config)
    {
        $this->container['variant_listing_config'] = $variant_listing_config;

        return $this;
    }

    /**
     * Gets variant_restrictions
     *
     * @return object|null
     */
    public function getVariantRestrictions()
    {
        return $this->container['variant_restrictions'];
    }

    /**
     * Sets variant_restrictions
     *
     * @param object|null $variant_restrictions variant_restrictions
     *
     * @return self
     */
    public function setVariantRestrictions($variant_restrictions)
    {
        $this->container['variant_restrictions'] = $variant_restrictions;

        return $this;
    }

    /**
     * Gets manufacturer_number
     *
     * @return string|null
     */
    public function getManufacturerNumber()
    {
        return $this->container['manufacturer_number'];
    }

    /**
     * Sets manufacturer_number
     *
     * @param string|null $manufacturer_number manufacturer_number
     *
     * @return self
     */
    public function setManufacturerNumber($manufacturer_number)
    {
        $this->container['manufacturer_number'] = $manufacturer_number;

        return $this;
    }

    /**
     * Gets ean
     *
     * @return string|null
     */
    public function getEan()
    {
        return $this->container['ean'];
    }

    /**
     * Sets ean
     *
     * @param string|null $ean ean
     *
     * @return self
     */
    public function setEan($ean)
    {
        $this->container['ean'] = $ean;

        return $this;
    }

    /**
     * Gets purchase_steps
     *
     * @return int|null
     */
    public function getPurchaseSteps()
    {
        return $this->container['purchase_steps'];
    }

    /**
     * Sets purchase_steps
     *
     * @param int|null $purchase_steps purchase_steps
     *
     * @return self
     */
    public function setPurchaseSteps($purchase_steps)
    {
        $this->container['purchase_steps'] = $purchase_steps;

        return $this;
    }

    /**
     * Gets max_purchase
     *
     * @return int|null
     */
    public function getMaxPurchase()
    {
        return $this->container['max_purchase'];
    }

    /**
     * Sets max_purchase
     *
     * @param int|null $max_purchase max_purchase
     *
     * @return self
     */
    public function setMaxPurchase($max_purchase)
    {
        $this->container['max_purchase'] = $max_purchase;

        return $this;
    }

    /**
     * Gets min_purchase
     *
     * @return int|null
     */
    public function getMinPurchase()
    {
        return $this->container['min_purchase'];
    }

    /**
     * Sets min_purchase
     *
     * @param int|null $min_purchase min_purchase
     *
     * @return self
     */
    public function setMinPurchase($min_purchase)
    {
        $this->container['min_purchase'] = $min_purchase;

        return $this;
    }

    /**
     * Gets purchase_unit
     *
     * @return float|null
     */
    public function getPurchaseUnit()
    {
        return $this->container['purchase_unit'];
    }

    /**
     * Sets purchase_unit
     *
     * @param float|null $purchase_unit purchase_unit
     *
     * @return self
     */
    public function setPurchaseUnit($purchase_unit)
    {
        $this->container['purchase_unit'] = $purchase_unit;

        return $this;
    }

    /**
     * Gets reference_unit
     *
     * @return float|null
     */
    public function getReferenceUnit()
    {
        return $this->container['reference_unit'];
    }

    /**
     * Sets reference_unit
     *
     * @param float|null $reference_unit reference_unit
     *
     * @return self
     */
    public function setReferenceUnit($reference_unit)
    {
        $this->container['reference_unit'] = $reference_unit;

        return $this;
    }

    /**
     * Gets shipping_free
     *
     * @return bool|null
     */
    public function getShippingFree()
    {
        return $this->container['shipping_free'];
    }

    /**
     * Sets shipping_free
     *
     * @param bool|null $shipping_free shipping_free
     *
     * @return self
     */
    public function setShippingFree($shipping_free)
    {
        $this->container['shipping_free'] = $shipping_free;

        return $this;
    }

    /**
     * Gets purchase_prices
     *
     * @return object|null
     */
    public function getPurchasePrices()
    {
        return $this->container['purchase_prices'];
    }

    /**
     * Sets purchase_prices
     *
     * @param object|null $purchase_prices purchase_prices
     *
     * @return self
     */
    public function setPurchasePrices($purchase_prices)
    {
        $this->container['purchase_prices'] = $purchase_prices;

        return $this;
    }

    /**
     * Gets mark_as_topseller
     *
     * @return bool|null
     */
    public function getMarkAsTopseller()
    {
        return $this->container['mark_as_topseller'];
    }

    /**
     * Sets mark_as_topseller
     *
     * @param bool|null $mark_as_topseller mark_as_topseller
     *
     * @return self
     */
    public function setMarkAsTopseller($mark_as_topseller)
    {
        $this->container['mark_as_topseller'] = $mark_as_topseller;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return float|null
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param float|null $weight weight
     *
     * @return self
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets width
     *
     * @return float|null
     */
    public function getWidth()
    {
        return $this->container['width'];
    }

    /**
     * Sets width
     *
     * @param float|null $width width
     *
     * @return self
     */
    public function setWidth($width)
    {
        $this->container['width'] = $width;

        return $this;
    }

    /**
     * Gets height
     *
     * @return float|null
     */
    public function getHeight()
    {
        return $this->container['height'];
    }

    /**
     * Sets height
     *
     * @param float|null $height height
     *
     * @return self
     */
    public function setHeight($height)
    {
        $this->container['height'] = $height;

        return $this;
    }

    /**
     * Gets length
     *
     * @return float|null
     */
    public function getLength()
    {
        return $this->container['length'];
    }

    /**
     * Sets length
     *
     * @param float|null $length length
     *
     * @return self
     */
    public function setLength($length)
    {
        $this->container['length'] = $length;

        return $this;
    }

    /**
     * Gets release_date
     *
     * @return \DateTime|null
     */
    public function getReleaseDate()
    {
        return $this->container['release_date'];
    }

    /**
     * Sets release_date
     *
     * @param \DateTime|null $release_date release_date
     *
     * @return self
     */
    public function setReleaseDate($release_date)
    {
        $this->container['release_date'] = $release_date;

        return $this;
    }

    /**
     * Gets rating_average
     *
     * @return float|null
     */
    public function getRatingAverage()
    {
        return $this->container['rating_average'];
    }

    /**
     * Sets rating_average
     *
     * @param float|null $rating_average rating_average
     *
     * @return self
     */
    public function setRatingAverage($rating_average)
    {
        $this->container['rating_average'] = $rating_average;

        return $this;
    }

    /**
     * Gets category_tree
     *
     * @return string[]|null
     */
    public function getCategoryTree()
    {
        return $this->container['category_tree'];
    }

    /**
     * Sets category_tree
     *
     * @param string[]|null $category_tree category_tree
     *
     * @return self
     */
    public function setCategoryTree($category_tree)
    {
        $this->container['category_tree'] = $category_tree;

        return $this;
    }

    /**
     * Gets property_ids
     *
     * @return string[]|null
     */
    public function getPropertyIds()
    {
        return $this->container['property_ids'];
    }

    /**
     * Sets property_ids
     *
     * @param string[]|null $property_ids property_ids
     *
     * @return self
     */
    public function setPropertyIds($property_ids)
    {
        $this->container['property_ids'] = $property_ids;

        return $this;
    }

    /**
     * Gets option_ids
     *
     * @return string[]|null
     */
    public function getOptionIds()
    {
        return $this->container['option_ids'];
    }

    /**
     * Sets option_ids
     *
     * @param string[]|null $option_ids option_ids
     *
     * @return self
     */
    public function setOptionIds($option_ids)
    {
        $this->container['option_ids'] = $option_ids;

        return $this;
    }

    /**
     * Gets stream_ids
     *
     * @return string[]|null
     */
    public function getStreamIds()
    {
        return $this->container['stream_ids'];
    }

    /**
     * Sets stream_ids
     *
     * @param string[]|null $stream_ids stream_ids
     *
     * @return self
     */
    public function setStreamIds($stream_ids)
    {
        $this->container['stream_ids'] = $stream_ids;

        return $this;
    }

    /**
     * Gets tag_ids
     *
     * @return string[]|null
     */
    public function getTagIds()
    {
        return $this->container['tag_ids'];
    }

    /**
     * Sets tag_ids
     *
     * @param string[]|null $tag_ids tag_ids
     *
     * @return self
     */
    public function setTagIds($tag_ids)
    {
        $this->container['tag_ids'] = $tag_ids;

        return $this;
    }

    /**
     * Gets category_ids
     *
     * @return string[]|null
     */
    public function getCategoryIds()
    {
        return $this->container['category_ids'];
    }

    /**
     * Sets category_ids
     *
     * @param string[]|null $category_ids category_ids
     *
     * @return self
     */
    public function setCategoryIds($category_ids)
    {
        $this->container['category_ids'] = $category_ids;

        return $this;
    }

    /**
     * Gets child_count
     *
     * @return int|null
     */
    public function getChildCount()
    {
        return $this->container['child_count'];
    }

    /**
     * Sets child_count
     *
     * @param int|null $child_count child_count
     *
     * @return self
     */
    public function setChildCount($child_count)
    {
        $this->container['child_count'] = $child_count;

        return $this;
    }

    /**
     * Gets custom_field_set_selection_active
     *
     * @return bool|null
     */
    public function getCustomFieldSetSelectionActive()
    {
        return $this->container['custom_field_set_selection_active'];
    }

    /**
     * Sets custom_field_set_selection_active
     *
     * @param bool|null $custom_field_set_selection_active custom_field_set_selection_active
     *
     * @return self
     */
    public function setCustomFieldSetSelectionActive($custom_field_set_selection_active)
    {
        $this->container['custom_field_set_selection_active'] = $custom_field_set_selection_active;

        return $this;
    }

    /**
     * Gets sales
     *
     * @return int|null
     */
    public function getSales()
    {
        return $this->container['sales'];
    }

    /**
     * Sets sales
     *
     * @param int|null $sales sales
     *
     * @return self
     */
    public function setSales($sales)
    {
        $this->container['sales'] = $sales;

        return $this;
    }

    /**
     * Gets states
     *
     * @return string[]|null
     */
    public function getStates()
    {
        return $this->container['states'];
    }

    /**
     * Sets states
     *
     * @param string[]|null $states states
     *
     * @return self
     */
    public function setStates($states)
    {
        $this->container['states'] = $states;

        return $this;
    }

    /**
     * Gets meta_description
     *
     * @return string|null
     */
    public function getMetaDescription()
    {
        return $this->container['meta_description'];
    }

    /**
     * Sets meta_description
     *
     * @param string|null $meta_description meta_description
     *
     * @return self
     */
    public function setMetaDescription($meta_description)
    {
        $this->container['meta_description'] = $meta_description;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets keywords
     *
     * @return string|null
     */
    public function getKeywords()
    {
        return $this->container['keywords'];
    }

    /**
     * Sets keywords
     *
     * @param string|null $keywords keywords
     *
     * @return self
     */
    public function setKeywords($keywords)
    {
        $this->container['keywords'] = $keywords;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets meta_title
     *
     * @return string|null
     */
    public function getMetaTitle()
    {
        return $this->container['meta_title'];
    }

    /**
     * Sets meta_title
     *
     * @param string|null $meta_title meta_title
     *
     * @return self
     */
    public function setMetaTitle($meta_title)
    {
        $this->container['meta_title'] = $meta_title;

        return $this;
    }

    /**
     * Gets pack_unit
     *
     * @return string|null
     */
    public function getPackUnit()
    {
        return $this->container['pack_unit'];
    }

    /**
     * Sets pack_unit
     *
     * @param string|null $pack_unit pack_unit
     *
     * @return self
     */
    public function setPackUnit($pack_unit)
    {
        $this->container['pack_unit'] = $pack_unit;

        return $this;
    }

    /**
     * Gets pack_unit_plural
     *
     * @return string|null
     */
    public function getPackUnitPlural()
    {
        return $this->container['pack_unit_plural'];
    }

    /**
     * Sets pack_unit_plural
     *
     * @param string|null $pack_unit_plural pack_unit_plural
     *
     * @return self
     */
    public function setPackUnitPlural($pack_unit_plural)
    {
        $this->container['pack_unit_plural'] = $pack_unit_plural;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return object|null
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param object|null $custom_fields custom_fields
     *
     * @return self
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }

    /**
     * Gets slot_config
     *
     * @return object|null
     */
    public function getSlotConfig()
    {
        return $this->container['slot_config'];
    }

    /**
     * Sets slot_config
     *
     * @param object|null $slot_config slot_config
     *
     * @return self
     */
    public function setSlotConfig($slot_config)
    {
        $this->container['slot_config'] = $slot_config;

        return $this;
    }

    /**
     * Gets custom_search_keywords
     *
     * @return object[]|null
     */
    public function getCustomSearchKeywords()
    {
        return $this->container['custom_search_keywords'];
    }

    /**
     * Sets custom_search_keywords
     *
     * @param object[]|null $custom_search_keywords custom_search_keywords
     *
     * @return self
     */
    public function setCustomSearchKeywords($custom_search_keywords)
    {
        $this->container['custom_search_keywords'] = $custom_search_keywords;

        return $this;
    }

    /**
     * Gets available_stock
     *
     * @return int|null
     */
    public function getAvailableStock()
    {
        return $this->container['available_stock'];
    }

    /**
     * Sets available_stock
     *
     * @param int|null $available_stock available_stock
     *
     * @return self
     */
    public function setAvailableStock($available_stock)
    {
        $this->container['available_stock'] = $available_stock;

        return $this;
    }

    /**
     * Gets stock
     *
     * @return int
     */
    public function getStock()
    {
        return $this->container['stock'];
    }

    /**
     * Sets stock
     *
     * @param int $stock stock
     *
     * @return self
     */
    public function setStock($stock)
    {
        $this->container['stock'] = $stock;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime $created_at created_at
     *
     * @return self
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime|null
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime|null $updated_at updated_at
     *
     * @return self
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets translated
     *
     * @return object|null
     */
    public function getTranslated()
    {
        return $this->container['translated'];
    }

    /**
     * Sets translated
     *
     * @param object|null $translated translated
     *
     * @return self
     */
    public function setTranslated($translated)
    {
        $this->container['translated'] = $translated;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


