<?php
/**
 * MediaJsonApiAllOfRelationships
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Shopware Admin API
 *
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Admin API.  For a better overview, all CRUD-endpoints are hidden by default. If you want to show also CRUD-endpoints add the query parameter `type=jsonapi`.
 *
 * The version of the OpenAPI document: 6.5.8.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\ShopwareAdminApiClient\Model;

use \ArrayAccess;
use \OpenAPI\ShopwareAdminApiClient\ObjectSerializer;

/**
 * MediaJsonApiAllOfRelationships Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\ShopwareAdminApiClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class MediaJsonApiAllOfRelationships implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'MediaJsonApi_allOf_relationships';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'tags' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsTags',
        'thumbnails' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsThumbnails',
        'user' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsUser',
        'categories' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCategories',
        'product_manufacturers' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductManufacturers',
        'product_media' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductMedia',
        'product_downloads' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductDownloads',
        'order_line_item_downloads' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsOrderLineItemDownloads',
        'avatar_users' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsAvatarUsers',
        'media_folder' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsMediaFolder',
        'property_group_options' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsPropertyGroupOptions',
        'mail_template_media' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsMailTemplateMedia',
        'document_base_configs' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsDocumentBaseConfigs',
        'shipping_methods' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsShippingMethods',
        'payment_methods' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsPaymentMethods',
        'product_configurator_settings' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductConfiguratorSettings',
        'order_line_items' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsOrderLineItems',
        'cms_blocks' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCmsBlocks',
        'cms_sections' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCmsSections',
        'cms_pages' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCmsPages',
        'documents' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsDocuments',
        'app_payment_methods' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsAppPaymentMethods',
        'app_shipping_methods' => '\OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsAppShippingMethods'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'tags' => null,
        'thumbnails' => null,
        'user' => null,
        'categories' => null,
        'product_manufacturers' => null,
        'product_media' => null,
        'product_downloads' => null,
        'order_line_item_downloads' => null,
        'avatar_users' => null,
        'media_folder' => null,
        'property_group_options' => null,
        'mail_template_media' => null,
        'document_base_configs' => null,
        'shipping_methods' => null,
        'payment_methods' => null,
        'product_configurator_settings' => null,
        'order_line_items' => null,
        'cms_blocks' => null,
        'cms_sections' => null,
        'cms_pages' => null,
        'documents' => null,
        'app_payment_methods' => null,
        'app_shipping_methods' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'tags' => 'tags',
        'thumbnails' => 'thumbnails',
        'user' => 'user',
        'categories' => 'categories',
        'product_manufacturers' => 'productManufacturers',
        'product_media' => 'productMedia',
        'product_downloads' => 'productDownloads',
        'order_line_item_downloads' => 'orderLineItemDownloads',
        'avatar_users' => 'avatarUsers',
        'media_folder' => 'mediaFolder',
        'property_group_options' => 'propertyGroupOptions',
        'mail_template_media' => 'mailTemplateMedia',
        'document_base_configs' => 'documentBaseConfigs',
        'shipping_methods' => 'shippingMethods',
        'payment_methods' => 'paymentMethods',
        'product_configurator_settings' => 'productConfiguratorSettings',
        'order_line_items' => 'orderLineItems',
        'cms_blocks' => 'cmsBlocks',
        'cms_sections' => 'cmsSections',
        'cms_pages' => 'cmsPages',
        'documents' => 'documents',
        'app_payment_methods' => 'appPaymentMethods',
        'app_shipping_methods' => 'appShippingMethods'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'tags' => 'setTags',
        'thumbnails' => 'setThumbnails',
        'user' => 'setUser',
        'categories' => 'setCategories',
        'product_manufacturers' => 'setProductManufacturers',
        'product_media' => 'setProductMedia',
        'product_downloads' => 'setProductDownloads',
        'order_line_item_downloads' => 'setOrderLineItemDownloads',
        'avatar_users' => 'setAvatarUsers',
        'media_folder' => 'setMediaFolder',
        'property_group_options' => 'setPropertyGroupOptions',
        'mail_template_media' => 'setMailTemplateMedia',
        'document_base_configs' => 'setDocumentBaseConfigs',
        'shipping_methods' => 'setShippingMethods',
        'payment_methods' => 'setPaymentMethods',
        'product_configurator_settings' => 'setProductConfiguratorSettings',
        'order_line_items' => 'setOrderLineItems',
        'cms_blocks' => 'setCmsBlocks',
        'cms_sections' => 'setCmsSections',
        'cms_pages' => 'setCmsPages',
        'documents' => 'setDocuments',
        'app_payment_methods' => 'setAppPaymentMethods',
        'app_shipping_methods' => 'setAppShippingMethods'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'tags' => 'getTags',
        'thumbnails' => 'getThumbnails',
        'user' => 'getUser',
        'categories' => 'getCategories',
        'product_manufacturers' => 'getProductManufacturers',
        'product_media' => 'getProductMedia',
        'product_downloads' => 'getProductDownloads',
        'order_line_item_downloads' => 'getOrderLineItemDownloads',
        'avatar_users' => 'getAvatarUsers',
        'media_folder' => 'getMediaFolder',
        'property_group_options' => 'getPropertyGroupOptions',
        'mail_template_media' => 'getMailTemplateMedia',
        'document_base_configs' => 'getDocumentBaseConfigs',
        'shipping_methods' => 'getShippingMethods',
        'payment_methods' => 'getPaymentMethods',
        'product_configurator_settings' => 'getProductConfiguratorSettings',
        'order_line_items' => 'getOrderLineItems',
        'cms_blocks' => 'getCmsBlocks',
        'cms_sections' => 'getCmsSections',
        'cms_pages' => 'getCmsPages',
        'documents' => 'getDocuments',
        'app_payment_methods' => 'getAppPaymentMethods',
        'app_shipping_methods' => 'getAppShippingMethods'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['tags'] = $data['tags'] ?? null;
        $this->container['thumbnails'] = $data['thumbnails'] ?? null;
        $this->container['user'] = $data['user'] ?? null;
        $this->container['categories'] = $data['categories'] ?? null;
        $this->container['product_manufacturers'] = $data['product_manufacturers'] ?? null;
        $this->container['product_media'] = $data['product_media'] ?? null;
        $this->container['product_downloads'] = $data['product_downloads'] ?? null;
        $this->container['order_line_item_downloads'] = $data['order_line_item_downloads'] ?? null;
        $this->container['avatar_users'] = $data['avatar_users'] ?? null;
        $this->container['media_folder'] = $data['media_folder'] ?? null;
        $this->container['property_group_options'] = $data['property_group_options'] ?? null;
        $this->container['mail_template_media'] = $data['mail_template_media'] ?? null;
        $this->container['document_base_configs'] = $data['document_base_configs'] ?? null;
        $this->container['shipping_methods'] = $data['shipping_methods'] ?? null;
        $this->container['payment_methods'] = $data['payment_methods'] ?? null;
        $this->container['product_configurator_settings'] = $data['product_configurator_settings'] ?? null;
        $this->container['order_line_items'] = $data['order_line_items'] ?? null;
        $this->container['cms_blocks'] = $data['cms_blocks'] ?? null;
        $this->container['cms_sections'] = $data['cms_sections'] ?? null;
        $this->container['cms_pages'] = $data['cms_pages'] ?? null;
        $this->container['documents'] = $data['documents'] ?? null;
        $this->container['app_payment_methods'] = $data['app_payment_methods'] ?? null;
        $this->container['app_shipping_methods'] = $data['app_shipping_methods'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets tags
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsTags|null
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsTags|null $tags tags
     *
     * @return self
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets thumbnails
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsThumbnails|null
     */
    public function getThumbnails()
    {
        return $this->container['thumbnails'];
    }

    /**
     * Sets thumbnails
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsThumbnails|null $thumbnails thumbnails
     *
     * @return self
     */
    public function setThumbnails($thumbnails)
    {
        $this->container['thumbnails'] = $thumbnails;

        return $this;
    }

    /**
     * Gets user
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsUser|null
     */
    public function getUser()
    {
        return $this->container['user'];
    }

    /**
     * Sets user
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsUser|null $user user
     *
     * @return self
     */
    public function setUser($user)
    {
        $this->container['user'] = $user;

        return $this;
    }

    /**
     * Gets categories
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCategories|null
     */
    public function getCategories()
    {
        return $this->container['categories'];
    }

    /**
     * Sets categories
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCategories|null $categories categories
     *
     * @return self
     */
    public function setCategories($categories)
    {
        $this->container['categories'] = $categories;

        return $this;
    }

    /**
     * Gets product_manufacturers
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductManufacturers|null
     */
    public function getProductManufacturers()
    {
        return $this->container['product_manufacturers'];
    }

    /**
     * Sets product_manufacturers
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductManufacturers|null $product_manufacturers product_manufacturers
     *
     * @return self
     */
    public function setProductManufacturers($product_manufacturers)
    {
        $this->container['product_manufacturers'] = $product_manufacturers;

        return $this;
    }

    /**
     * Gets product_media
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductMedia|null
     */
    public function getProductMedia()
    {
        return $this->container['product_media'];
    }

    /**
     * Sets product_media
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductMedia|null $product_media product_media
     *
     * @return self
     */
    public function setProductMedia($product_media)
    {
        $this->container['product_media'] = $product_media;

        return $this;
    }

    /**
     * Gets product_downloads
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductDownloads|null
     */
    public function getProductDownloads()
    {
        return $this->container['product_downloads'];
    }

    /**
     * Sets product_downloads
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductDownloads|null $product_downloads product_downloads
     *
     * @return self
     */
    public function setProductDownloads($product_downloads)
    {
        $this->container['product_downloads'] = $product_downloads;

        return $this;
    }

    /**
     * Gets order_line_item_downloads
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsOrderLineItemDownloads|null
     */
    public function getOrderLineItemDownloads()
    {
        return $this->container['order_line_item_downloads'];
    }

    /**
     * Sets order_line_item_downloads
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsOrderLineItemDownloads|null $order_line_item_downloads order_line_item_downloads
     *
     * @return self
     */
    public function setOrderLineItemDownloads($order_line_item_downloads)
    {
        $this->container['order_line_item_downloads'] = $order_line_item_downloads;

        return $this;
    }

    /**
     * Gets avatar_users
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsAvatarUsers|null
     */
    public function getAvatarUsers()
    {
        return $this->container['avatar_users'];
    }

    /**
     * Sets avatar_users
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsAvatarUsers|null $avatar_users avatar_users
     *
     * @return self
     */
    public function setAvatarUsers($avatar_users)
    {
        $this->container['avatar_users'] = $avatar_users;

        return $this;
    }

    /**
     * Gets media_folder
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsMediaFolder|null
     */
    public function getMediaFolder()
    {
        return $this->container['media_folder'];
    }

    /**
     * Sets media_folder
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsMediaFolder|null $media_folder media_folder
     *
     * @return self
     */
    public function setMediaFolder($media_folder)
    {
        $this->container['media_folder'] = $media_folder;

        return $this;
    }

    /**
     * Gets property_group_options
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsPropertyGroupOptions|null
     */
    public function getPropertyGroupOptions()
    {
        return $this->container['property_group_options'];
    }

    /**
     * Sets property_group_options
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsPropertyGroupOptions|null $property_group_options property_group_options
     *
     * @return self
     */
    public function setPropertyGroupOptions($property_group_options)
    {
        $this->container['property_group_options'] = $property_group_options;

        return $this;
    }

    /**
     * Gets mail_template_media
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsMailTemplateMedia|null
     */
    public function getMailTemplateMedia()
    {
        return $this->container['mail_template_media'];
    }

    /**
     * Sets mail_template_media
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsMailTemplateMedia|null $mail_template_media mail_template_media
     *
     * @return self
     */
    public function setMailTemplateMedia($mail_template_media)
    {
        $this->container['mail_template_media'] = $mail_template_media;

        return $this;
    }

    /**
     * Gets document_base_configs
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsDocumentBaseConfigs|null
     */
    public function getDocumentBaseConfigs()
    {
        return $this->container['document_base_configs'];
    }

    /**
     * Sets document_base_configs
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsDocumentBaseConfigs|null $document_base_configs document_base_configs
     *
     * @return self
     */
    public function setDocumentBaseConfigs($document_base_configs)
    {
        $this->container['document_base_configs'] = $document_base_configs;

        return $this;
    }

    /**
     * Gets shipping_methods
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsShippingMethods|null
     */
    public function getShippingMethods()
    {
        return $this->container['shipping_methods'];
    }

    /**
     * Sets shipping_methods
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsShippingMethods|null $shipping_methods shipping_methods
     *
     * @return self
     */
    public function setShippingMethods($shipping_methods)
    {
        $this->container['shipping_methods'] = $shipping_methods;

        return $this;
    }

    /**
     * Gets payment_methods
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsPaymentMethods|null
     */
    public function getPaymentMethods()
    {
        return $this->container['payment_methods'];
    }

    /**
     * Sets payment_methods
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsPaymentMethods|null $payment_methods payment_methods
     *
     * @return self
     */
    public function setPaymentMethods($payment_methods)
    {
        $this->container['payment_methods'] = $payment_methods;

        return $this;
    }

    /**
     * Gets product_configurator_settings
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductConfiguratorSettings|null
     */
    public function getProductConfiguratorSettings()
    {
        return $this->container['product_configurator_settings'];
    }

    /**
     * Sets product_configurator_settings
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsProductConfiguratorSettings|null $product_configurator_settings product_configurator_settings
     *
     * @return self
     */
    public function setProductConfiguratorSettings($product_configurator_settings)
    {
        $this->container['product_configurator_settings'] = $product_configurator_settings;

        return $this;
    }

    /**
     * Gets order_line_items
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsOrderLineItems|null
     */
    public function getOrderLineItems()
    {
        return $this->container['order_line_items'];
    }

    /**
     * Sets order_line_items
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsOrderLineItems|null $order_line_items order_line_items
     *
     * @return self
     */
    public function setOrderLineItems($order_line_items)
    {
        $this->container['order_line_items'] = $order_line_items;

        return $this;
    }

    /**
     * Gets cms_blocks
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCmsBlocks|null
     */
    public function getCmsBlocks()
    {
        return $this->container['cms_blocks'];
    }

    /**
     * Sets cms_blocks
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCmsBlocks|null $cms_blocks cms_blocks
     *
     * @return self
     */
    public function setCmsBlocks($cms_blocks)
    {
        $this->container['cms_blocks'] = $cms_blocks;

        return $this;
    }

    /**
     * Gets cms_sections
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCmsSections|null
     */
    public function getCmsSections()
    {
        return $this->container['cms_sections'];
    }

    /**
     * Sets cms_sections
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCmsSections|null $cms_sections cms_sections
     *
     * @return self
     */
    public function setCmsSections($cms_sections)
    {
        $this->container['cms_sections'] = $cms_sections;

        return $this;
    }

    /**
     * Gets cms_pages
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCmsPages|null
     */
    public function getCmsPages()
    {
        return $this->container['cms_pages'];
    }

    /**
     * Sets cms_pages
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsCmsPages|null $cms_pages cms_pages
     *
     * @return self
     */
    public function setCmsPages($cms_pages)
    {
        $this->container['cms_pages'] = $cms_pages;

        return $this;
    }

    /**
     * Gets documents
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsDocuments|null
     */
    public function getDocuments()
    {
        return $this->container['documents'];
    }

    /**
     * Sets documents
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsDocuments|null $documents documents
     *
     * @return self
     */
    public function setDocuments($documents)
    {
        $this->container['documents'] = $documents;

        return $this;
    }

    /**
     * Gets app_payment_methods
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsAppPaymentMethods|null
     */
    public function getAppPaymentMethods()
    {
        return $this->container['app_payment_methods'];
    }

    /**
     * Sets app_payment_methods
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsAppPaymentMethods|null $app_payment_methods app_payment_methods
     *
     * @return self
     */
    public function setAppPaymentMethods($app_payment_methods)
    {
        $this->container['app_payment_methods'] = $app_payment_methods;

        return $this;
    }

    /**
     * Gets app_shipping_methods
     *
     * @return \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsAppShippingMethods|null
     */
    public function getAppShippingMethods()
    {
        return $this->container['app_shipping_methods'];
    }

    /**
     * Sets app_shipping_methods
     *
     * @param \OpenAPI\ShopwareAdminApiClient\Model\MediaJsonApiAllOfRelationshipsAppShippingMethods|null $app_shipping_methods app_shipping_methods
     *
     * @return self
     */
    public function setAppShippingMethods($app_shipping_methods)
    {
        $this->container['app_shipping_methods'] = $app_shipping_methods;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


